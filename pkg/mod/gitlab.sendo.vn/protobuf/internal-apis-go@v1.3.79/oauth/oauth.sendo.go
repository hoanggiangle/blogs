// Code generated by protoc-gen-sendo. DO NOT EDIT.
// Author: Viet Tran. Software Architect - DC1
// source: oauth/oauth.proto

/*
Package oauth is a generated protocol buffer package.

It is generated from these files:
	oauth/oauth.proto

It has these top-level messages:
	GetUserUsingTokenRequest
	GetUserUsingTokenResponse
	GetUserUsingTokenRequestV2
	GetUserUsingTokenResponseV2
*/
package oauth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "context"
	sendo "gitlab.sendo.vn/core/golang-sdk/new"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for OAuthService service

type OAuthService interface {
	GetUserUsingToken(sdCtx sendo.ServiceContext, streamServer OAuthService_GetUserUsingTokenServer) error
	GetUserUsingTokenV2(sdCtx sendo.ServiceContext, streamServer OAuthService_GetUserUsingTokenV2Server) error
}

type sDOAuthServiceServer struct {
	ctx sendo.ServiceContext
	sv  OAuthService
}

func NewSDOAuthServiceServer(ctx sendo.ServiceContext, sv OAuthService) *sDOAuthServiceServer {
	return &sDOAuthServiceServer{
		sv:  sv,
		ctx: ctx,
	}
}

func (h *sDOAuthServiceServer) GetUserUsingToken(streamSV OAuthService_GetUserUsingTokenServer) error {
	return h.sv.GetUserUsingToken(h.ctx, streamSV)
}

func (h *sDOAuthServiceServer) GetUserUsingTokenV2(streamSV OAuthService_GetUserUsingTokenV2Server) error {
	return h.sv.GetUserUsingTokenV2(h.ctx, streamSV)
}

func AddOAuthServiceHandler(service sendo.Service, sv OAuthService) {
	service.Server().AddHandler(func(gRPC *grpc.Server) {
		RegisterOAuthServiceServer(gRPC, NewSDOAuthServiceServer(service, sv))
	})
}
