// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: oauth/oauth.proto

package oauth // import "gitlab.sendo.vn/protobuf/internal-apis-go/oauth"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetUserUsingTokenRequest struct {
	MessageId            uint64   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AppId                string   `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserUsingTokenRequest) Reset()         { *m = GetUserUsingTokenRequest{} }
func (m *GetUserUsingTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserUsingTokenRequest) ProtoMessage()    {}
func (*GetUserUsingTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_b4e93b687c87f228, []int{0}
}
func (m *GetUserUsingTokenRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserUsingTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserUsingTokenRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetUserUsingTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserUsingTokenRequest.Merge(dst, src)
}
func (m *GetUserUsingTokenRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetUserUsingTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserUsingTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserUsingTokenRequest proto.InternalMessageInfo

func (m *GetUserUsingTokenRequest) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *GetUserUsingTokenRequest) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *GetUserUsingTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetUserUsingTokenResponse struct {
	MessageId            uint64   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ErrorId              uint64   `protobuf:"varint,2,opt,name=error_id,json=errorId,proto3" json:"error_id,omitempty"`
	UserId               uint64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	FirstName            string   `protobuf:"bytes,6,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,7,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserUsingTokenResponse) Reset()         { *m = GetUserUsingTokenResponse{} }
func (m *GetUserUsingTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserUsingTokenResponse) ProtoMessage()    {}
func (*GetUserUsingTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_b4e93b687c87f228, []int{1}
}
func (m *GetUserUsingTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserUsingTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserUsingTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetUserUsingTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserUsingTokenResponse.Merge(dst, src)
}
func (m *GetUserUsingTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetUserUsingTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserUsingTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserUsingTokenResponse proto.InternalMessageInfo

func (m *GetUserUsingTokenResponse) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *GetUserUsingTokenResponse) GetErrorId() uint64 {
	if m != nil {
		return m.ErrorId
	}
	return 0
}

func (m *GetUserUsingTokenResponse) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetUserUsingTokenResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetUserUsingTokenResponse) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GetUserUsingTokenResponse) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *GetUserUsingTokenResponse) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

type GetUserUsingTokenRequestV2 struct {
	MessageId            uint64   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	AppId                string   `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserUsingTokenRequestV2) Reset()         { *m = GetUserUsingTokenRequestV2{} }
func (m *GetUserUsingTokenRequestV2) String() string { return proto.CompactTextString(m) }
func (*GetUserUsingTokenRequestV2) ProtoMessage()    {}
func (*GetUserUsingTokenRequestV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_b4e93b687c87f228, []int{2}
}
func (m *GetUserUsingTokenRequestV2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserUsingTokenRequestV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserUsingTokenRequestV2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetUserUsingTokenRequestV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserUsingTokenRequestV2.Merge(dst, src)
}
func (m *GetUserUsingTokenRequestV2) XXX_Size() int {
	return m.Size()
}
func (m *GetUserUsingTokenRequestV2) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserUsingTokenRequestV2.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserUsingTokenRequestV2 proto.InternalMessageInfo

func (m *GetUserUsingTokenRequestV2) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *GetUserUsingTokenRequestV2) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *GetUserUsingTokenRequestV2) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetUserUsingTokenResponseV2 struct {
	MessageId            uint64   `protobuf:"varint,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ErrorId              uint64   `protobuf:"varint,2,opt,name=error_id,json=errorId,proto3" json:"error_id,omitempty"`
	CustomerId           uint64   `protobuf:"varint,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	FptId                uint64   `protobuf:"varint,4,opt,name=fpt_id,json=fptId,proto3" json:"fpt_id,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	CheckoutVerified     bool     `protobuf:"varint,7,opt,name=checkout_verified,json=checkoutVerified,proto3" json:"checkout_verified,omitempty"`
	EmailVerified        bool     `protobuf:"varint,8,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	PhoneVerified        bool     `protobuf:"varint,9,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	FirstName            string   `protobuf:"bytes,10,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,11,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Avatar               string   `protobuf:"bytes,12,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Birthday             uint64   `protobuf:"varint,13,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender               uint64   `protobuf:"varint,14,opt,name=gender,proto3" json:"gender,omitempty"`
	DefaultShipping      uint64   `protobuf:"varint,15,opt,name=default_shipping,json=defaultShipping,proto3" json:"default_shipping,omitempty"`
	CreatedAt            uint64   `protobuf:"varint,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            uint64   `protobuf:"varint,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserUsingTokenResponseV2) Reset()         { *m = GetUserUsingTokenResponseV2{} }
func (m *GetUserUsingTokenResponseV2) String() string { return proto.CompactTextString(m) }
func (*GetUserUsingTokenResponseV2) ProtoMessage()    {}
func (*GetUserUsingTokenResponseV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_oauth_b4e93b687c87f228, []int{3}
}
func (m *GetUserUsingTokenResponseV2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUserUsingTokenResponseV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUserUsingTokenResponseV2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *GetUserUsingTokenResponseV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserUsingTokenResponseV2.Merge(dst, src)
}
func (m *GetUserUsingTokenResponseV2) XXX_Size() int {
	return m.Size()
}
func (m *GetUserUsingTokenResponseV2) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserUsingTokenResponseV2.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserUsingTokenResponseV2 proto.InternalMessageInfo

func (m *GetUserUsingTokenResponseV2) GetMessageId() uint64 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetErrorId() uint64 {
	if m != nil {
		return m.ErrorId
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetCustomerId() uint64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetFptId() uint64 {
	if m != nil {
		return m.FptId
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetUserUsingTokenResponseV2) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GetUserUsingTokenResponseV2) GetCheckoutVerified() bool {
	if m != nil {
		return m.CheckoutVerified
	}
	return false
}

func (m *GetUserUsingTokenResponseV2) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *GetUserUsingTokenResponseV2) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *GetUserUsingTokenResponseV2) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *GetUserUsingTokenResponseV2) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *GetUserUsingTokenResponseV2) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *GetUserUsingTokenResponseV2) GetBirthday() uint64 {
	if m != nil {
		return m.Birthday
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetGender() uint64 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetDefaultShipping() uint64 {
	if m != nil {
		return m.DefaultShipping
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetCreatedAt() uint64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *GetUserUsingTokenResponseV2) GetUpdatedAt() uint64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func init() {
	proto.RegisterType((*GetUserUsingTokenRequest)(nil), "sendo.v1.api.oauth.GetUserUsingTokenRequest")
	proto.RegisterType((*GetUserUsingTokenResponse)(nil), "sendo.v1.api.oauth.GetUserUsingTokenResponse")
	proto.RegisterType((*GetUserUsingTokenRequestV2)(nil), "sendo.v1.api.oauth.GetUserUsingTokenRequestV2")
	proto.RegisterType((*GetUserUsingTokenResponseV2)(nil), "sendo.v1.api.oauth.GetUserUsingTokenResponseV2")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OAuthServiceClient is the client API for OAuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OAuthServiceClient interface {
	GetUserUsingToken(ctx context.Context, opts ...grpc.CallOption) (OAuthService_GetUserUsingTokenClient, error)
	GetUserUsingTokenV2(ctx context.Context, opts ...grpc.CallOption) (OAuthService_GetUserUsingTokenV2Client, error)
}

type oAuthServiceClient struct {
	cc *grpc.ClientConn
}

func NewOAuthServiceClient(cc *grpc.ClientConn) OAuthServiceClient {
	return &oAuthServiceClient{cc}
}

func (c *oAuthServiceClient) GetUserUsingToken(ctx context.Context, opts ...grpc.CallOption) (OAuthService_GetUserUsingTokenClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OAuthService_serviceDesc.Streams[0], "/sendo.v1.api.oauth.OAuthService/GetUserUsingToken", opts...)
	if err != nil {
		return nil, err
	}
	x := &oAuthServiceGetUserUsingTokenClient{stream}
	return x, nil
}

type OAuthService_GetUserUsingTokenClient interface {
	Send(*GetUserUsingTokenRequest) error
	Recv() (*GetUserUsingTokenResponse, error)
	grpc.ClientStream
}

type oAuthServiceGetUserUsingTokenClient struct {
	grpc.ClientStream
}

func (x *oAuthServiceGetUserUsingTokenClient) Send(m *GetUserUsingTokenRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *oAuthServiceGetUserUsingTokenClient) Recv() (*GetUserUsingTokenResponse, error) {
	m := new(GetUserUsingTokenResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *oAuthServiceClient) GetUserUsingTokenV2(ctx context.Context, opts ...grpc.CallOption) (OAuthService_GetUserUsingTokenV2Client, error) {
	stream, err := c.cc.NewStream(ctx, &_OAuthService_serviceDesc.Streams[1], "/sendo.v1.api.oauth.OAuthService/GetUserUsingTokenV2", opts...)
	if err != nil {
		return nil, err
	}
	x := &oAuthServiceGetUserUsingTokenV2Client{stream}
	return x, nil
}

type OAuthService_GetUserUsingTokenV2Client interface {
	Send(*GetUserUsingTokenRequestV2) error
	Recv() (*GetUserUsingTokenResponseV2, error)
	grpc.ClientStream
}

type oAuthServiceGetUserUsingTokenV2Client struct {
	grpc.ClientStream
}

func (x *oAuthServiceGetUserUsingTokenV2Client) Send(m *GetUserUsingTokenRequestV2) error {
	return x.ClientStream.SendMsg(m)
}

func (x *oAuthServiceGetUserUsingTokenV2Client) Recv() (*GetUserUsingTokenResponseV2, error) {
	m := new(GetUserUsingTokenResponseV2)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OAuthServiceServer is the server API for OAuthService service.
type OAuthServiceServer interface {
	GetUserUsingToken(OAuthService_GetUserUsingTokenServer) error
	GetUserUsingTokenV2(OAuthService_GetUserUsingTokenV2Server) error
}

func RegisterOAuthServiceServer(s *grpc.Server, srv OAuthServiceServer) {
	s.RegisterService(&_OAuthService_serviceDesc, srv)
}

func _OAuthService_GetUserUsingToken_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OAuthServiceServer).GetUserUsingToken(&oAuthServiceGetUserUsingTokenServer{stream})
}

type OAuthService_GetUserUsingTokenServer interface {
	Send(*GetUserUsingTokenResponse) error
	Recv() (*GetUserUsingTokenRequest, error)
	grpc.ServerStream
}

type oAuthServiceGetUserUsingTokenServer struct {
	grpc.ServerStream
}

func (x *oAuthServiceGetUserUsingTokenServer) Send(m *GetUserUsingTokenResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *oAuthServiceGetUserUsingTokenServer) Recv() (*GetUserUsingTokenRequest, error) {
	m := new(GetUserUsingTokenRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _OAuthService_GetUserUsingTokenV2_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OAuthServiceServer).GetUserUsingTokenV2(&oAuthServiceGetUserUsingTokenV2Server{stream})
}

type OAuthService_GetUserUsingTokenV2Server interface {
	Send(*GetUserUsingTokenResponseV2) error
	Recv() (*GetUserUsingTokenRequestV2, error)
	grpc.ServerStream
}

type oAuthServiceGetUserUsingTokenV2Server struct {
	grpc.ServerStream
}

func (x *oAuthServiceGetUserUsingTokenV2Server) Send(m *GetUserUsingTokenResponseV2) error {
	return x.ServerStream.SendMsg(m)
}

func (x *oAuthServiceGetUserUsingTokenV2Server) Recv() (*GetUserUsingTokenRequestV2, error) {
	m := new(GetUserUsingTokenRequestV2)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _OAuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sendo.v1.api.oauth.OAuthService",
	HandlerType: (*OAuthServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUserUsingToken",
			Handler:       _OAuthService_GetUserUsingToken_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetUserUsingTokenV2",
			Handler:       _OAuthService_GetUserUsingTokenV2_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "oauth/oauth.proto",
}

func (m *GetUserUsingTokenRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserUsingTokenRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MessageId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.MessageId))
	}
	if len(m.AppId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.AppId)))
		i += copy(dAtA[i:], m.AppId)
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetUserUsingTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserUsingTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MessageId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.MessageId))
	}
	if m.ErrorId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.ErrorId))
	}
	if m.UserId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.UserId))
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.FirstName) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetUserUsingTokenRequestV2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserUsingTokenRequestV2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MessageId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.MessageId))
	}
	if len(m.AppId) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.AppId)))
		i += copy(dAtA[i:], m.AppId)
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *GetUserUsingTokenResponseV2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUserUsingTokenResponseV2) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.MessageId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.MessageId))
	}
	if m.ErrorId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.ErrorId))
	}
	if m.CustomerId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.CustomerId))
	}
	if m.FptId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.FptId))
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.CheckoutVerified {
		dAtA[i] = 0x38
		i++
		if m.CheckoutVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.EmailVerified {
		dAtA[i] = 0x40
		i++
		if m.EmailVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.PhoneVerified {
		dAtA[i] = 0x48
		i++
		if m.PhoneVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.FirstName) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.FirstName)))
		i += copy(dAtA[i:], m.FirstName)
	}
	if len(m.LastName) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.LastName)))
		i += copy(dAtA[i:], m.LastName)
	}
	if len(m.Avatar) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintOauth(dAtA, i, uint64(len(m.Avatar)))
		i += copy(dAtA[i:], m.Avatar)
	}
	if m.Birthday != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.Birthday))
	}
	if m.Gender != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.Gender))
	}
	if m.DefaultShipping != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.DefaultShipping))
	}
	if m.CreatedAt != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintOauth(dAtA, i, uint64(m.UpdatedAt))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintOauth(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *GetUserUsingTokenRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageId != 0 {
		n += 1 + sovOauth(uint64(m.MessageId))
	}
	l = len(m.AppId)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserUsingTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageId != 0 {
		n += 1 + sovOauth(uint64(m.MessageId))
	}
	if m.ErrorId != 0 {
		n += 1 + sovOauth(uint64(m.ErrorId))
	}
	if m.UserId != 0 {
		n += 1 + sovOauth(uint64(m.UserId))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserUsingTokenRequestV2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageId != 0 {
		n += 1 + sovOauth(uint64(m.MessageId))
	}
	l = len(m.AppId)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUserUsingTokenResponseV2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MessageId != 0 {
		n += 1 + sovOauth(uint64(m.MessageId))
	}
	if m.ErrorId != 0 {
		n += 1 + sovOauth(uint64(m.ErrorId))
	}
	if m.CustomerId != 0 {
		n += 1 + sovOauth(uint64(m.CustomerId))
	}
	if m.FptId != 0 {
		n += 1 + sovOauth(uint64(m.FptId))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	if m.CheckoutVerified {
		n += 2
	}
	if m.EmailVerified {
		n += 2
	}
	if m.PhoneVerified {
		n += 2
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovOauth(uint64(l))
	}
	if m.Birthday != 0 {
		n += 1 + sovOauth(uint64(m.Birthday))
	}
	if m.Gender != 0 {
		n += 1 + sovOauth(uint64(m.Gender))
	}
	if m.DefaultShipping != 0 {
		n += 1 + sovOauth(uint64(m.DefaultShipping))
	}
	if m.CreatedAt != 0 {
		n += 2 + sovOauth(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 2 + sovOauth(uint64(m.UpdatedAt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovOauth(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozOauth(x uint64) (n int) {
	return sovOauth(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetUserUsingTokenRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserUsingTokenRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserUsingTokenRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserUsingTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserUsingTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserUsingTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorId", wireType)
			}
			m.ErrorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			m.UserId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UserId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserUsingTokenRequestV2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserUsingTokenRequestV2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserUsingTokenRequestV2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUserUsingTokenResponseV2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUserUsingTokenResponseV2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUserUsingTokenResponseV2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			m.MessageId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorId", wireType)
			}
			m.ErrorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			m.CustomerId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CustomerId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FptId", wireType)
			}
			m.FptId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FptId |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CheckoutVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CheckoutVerified = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EmailVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EmailVerified = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PhoneVerified = bool(v != 0)
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthOauth
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			m.Birthday = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Birthday |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			m.Gender = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Gender |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultShipping", wireType)
			}
			m.DefaultShipping = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DefaultShipping |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipOauth(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthOauth
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipOauth(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowOauth
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowOauth
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthOauth
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowOauth
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipOauth(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthOauth = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowOauth   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("oauth/oauth.proto", fileDescriptor_oauth_b4e93b687c87f228) }

var fileDescriptor_oauth_b4e93b687c87f228 = []byte{
	// 589 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcb, 0x6e, 0xd3, 0x4c,
	0x14, 0xfe, 0xdd, 0x26, 0x6e, 0x32, 0xbd, 0x66, 0x7e, 0x2e, 0x6e, 0x0a, 0xa5, 0x8a, 0x84, 0x54,
	0x04, 0xb5, 0x21, 0xac, 0x59, 0x94, 0x0d, 0xea, 0x06, 0xa4, 0x94, 0x66, 0xc1, 0x26, 0x9a, 0xc4,
	0xc7, 0xf6, 0xa8, 0xce, 0xcc, 0x30, 0x33, 0x8e, 0x84, 0xc4, 0x92, 0x77, 0xe1, 0x55, 0x58, 0xb2,
	0x62, 0x8d, 0xfa, 0x24, 0xc8, 0x67, 0xec, 0x36, 0x55, 0x9b, 0x96, 0x4a, 0x6c, 0x22, 0x7d, 0x17,
	0xcf, 0x37, 0xfa, 0xce, 0xc9, 0x90, 0x8e, 0x64, 0x85, 0xcd, 0x22, 0xfc, 0x0d, 0x95, 0x96, 0x56,
	0x52, 0x6a, 0x40, 0xc4, 0x32, 0x9c, 0xbd, 0x0a, 0x99, 0xe2, 0x21, 0x2a, 0xdd, 0x47, 0xa9, 0x94,
	0x69, 0x0e, 0x11, 0x53, 0x3c, 0x62, 0x42, 0x48, 0xcb, 0x2c, 0x97, 0xc2, 0xb8, 0x2f, 0x7a, 0x09,
	0x09, 0xde, 0x81, 0x3d, 0x31, 0xa0, 0x4f, 0x0c, 0x17, 0xe9, 0x47, 0x79, 0x0a, 0x62, 0x00, 0x9f,
	0x0b, 0x30, 0x96, 0x3e, 0x26, 0x64, 0x0a, 0xc6, 0xb0, 0x14, 0x46, 0x3c, 0x0e, 0xbc, 0x3d, 0x6f,
	0xbf, 0x31, 0x68, 0x57, 0xcc, 0x51, 0x4c, 0xef, 0x13, 0x9f, 0x29, 0x55, 0x4a, 0x4b, 0x7b, 0xde,
	0x7e, 0x7b, 0xd0, 0x64, 0x4a, 0x1d, 0xc5, 0xf4, 0x1e, 0x69, 0xda, 0xf2, 0x94, 0x60, 0xd9, 0xb1,
	0x08, 0x7a, 0xbf, 0x3c, 0xb2, 0x7d, 0x4d, 0x90, 0x51, 0x52, 0x18, 0xb8, 0x2d, 0x69, 0x9b, 0xb4,
	0x40, 0x6b, 0xa9, 0xeb, 0xac, 0xc6, 0x60, 0x05, 0xf1, 0x51, 0x4c, 0x1f, 0x92, 0x95, 0xc2, 0x00,
	0x2a, 0xcb, 0xa8, 0xf8, 0x25, 0x74, 0xd7, 0x80, 0x29, 0xe3, 0x79, 0xd0, 0x70, 0xd7, 0x40, 0x50,
	0xb2, 0x2a, 0x93, 0x02, 0x82, 0xa6, 0x63, 0x11, 0x94, 0xf1, 0x09, 0xd7, 0xc6, 0x8e, 0x04, 0x9b,
	0x42, 0xe0, 0xa3, 0xd4, 0x46, 0xe6, 0x3d, 0x9b, 0x02, 0xdd, 0x21, 0xed, 0x9c, 0xd5, 0xea, 0x0a,
	0xaa, 0xad, 0x92, 0x28, 0xc5, 0x5e, 0x46, 0xba, 0x8b, 0x0a, 0x1c, 0xf6, 0xff, 0x69, 0x85, 0xdf,
	0x1b, 0x64, 0x67, 0x61, 0x85, 0xb7, 0x67, 0xdd, 0x50, 0xe2, 0x13, 0xb2, 0x3a, 0x29, 0x8c, 0x95,
	0xd3, 0xf9, 0x22, 0x49, 0x4d, 0xb9, 0x7b, 0x26, 0xca, 0x96, 0x5a, 0x03, 0xb5, 0x66, 0xa2, 0xec,
	0x7c, 0xc7, 0xcd, 0x6b, 0x3b, 0xf6, 0xe7, 0x3b, 0x7e, 0x4e, 0x3a, 0x93, 0x0c, 0x26, 0xa7, 0xb2,
	0xb0, 0xa3, 0x19, 0x68, 0x9e, 0x70, 0x88, 0xb1, 0xcc, 0xd6, 0x60, 0xab, 0x16, 0x86, 0x15, 0x4f,
	0x9f, 0x92, 0x0d, 0x3c, 0xeb, 0xc2, 0xd9, 0x42, 0xe7, 0x3a, 0xb2, 0xf3, 0x36, 0x3c, 0xfc, 0xc2,
	0xd6, 0x76, 0x36, 0x64, 0xcf, 0x6d, 0x97, 0xc7, 0x4b, 0x6e, 0x1c, 0xef, 0xea, 0xe5, 0xf1, 0xd2,
	0x07, 0xc4, 0x67, 0x33, 0x66, 0x99, 0x0e, 0xd6, 0x50, 0xa9, 0x10, 0xed, 0x92, 0xd6, 0x98, 0x6b,
	0x9b, 0xc5, 0xec, 0x4b, 0xb0, 0x8e, 0x9d, 0x9c, 0xe3, 0xf2, 0x9b, 0x14, 0x44, 0x0c, 0x3a, 0xd8,
	0x70, 0x2b, 0xe9, 0x10, 0x7d, 0x46, 0xb6, 0x62, 0x48, 0x58, 0x91, 0xdb, 0x91, 0xc9, 0xb8, 0x52,
	0x5c, 0xa4, 0xc1, 0x26, 0x3a, 0x36, 0x2b, 0xfe, 0xb8, 0xa2, 0xcb, 0x2b, 0x4f, 0x34, 0x30, 0x0b,
	0xf1, 0x88, 0xd9, 0x60, 0xcb, 0xcd, 0xb2, 0x62, 0x0e, 0xf1, 0x9f, 0x59, 0xa8, 0xb8, 0x96, 0x3b,
	0x4e, 0xae, 0x98, 0x43, 0xdb, 0xff, 0xb6, 0x44, 0xd6, 0x3e, 0x1c, 0x16, 0x36, 0x3b, 0x06, 0x3d,
	0xe3, 0x13, 0xa0, 0x33, 0xd2, 0xb9, 0xb2, 0x39, 0xf4, 0x45, 0x78, 0xf5, 0xb5, 0x08, 0x17, 0xed,
	0x72, 0xf7, 0xe0, 0x2f, 0xdd, 0x6e, 0x1d, 0x7b, 0xff, 0xed, 0x7b, 0x2f, 0x3d, 0xfa, 0x95, 0xfc,
	0x7f, 0xc5, 0x32, 0xec, 0xd3, 0xf0, 0x2e, 0xc9, 0xc3, 0x7e, 0x37, 0xba, 0x53, 0xf6, 0xb0, 0xef,
	0xd2, 0xdf, 0xbe, 0xf9, 0x71, 0xb6, 0xeb, 0xfd, 0x3c, 0xdb, 0xf5, 0x7e, 0x9f, 0xed, 0x7a, 0x9f,
	0xa2, 0x94, 0xdb, 0x9c, 0x8d, 0xeb, 0xa3, 0x44, 0x84, 0x0f, 0xe0, 0xb8, 0x48, 0x22, 0x2e, 0x2c,
	0x68, 0xc1, 0xf2, 0x03, 0xa6, 0xb8, 0x39, 0x48, 0xa5, 0x7b, 0x52, 0xc7, 0x3e, 0x1a, 0x5e, 0xff,
	0x09, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x6d, 0x0b, 0x0e, 0x68, 0x05, 0x00, 0x00,
}
