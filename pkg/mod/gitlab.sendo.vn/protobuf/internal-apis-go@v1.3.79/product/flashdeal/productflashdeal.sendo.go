// Code generated by protoc-gen-sendo. DO NOT EDIT.
// Author: Viet Tran. Software Architect - DC1
// source: product/flashdeal/productflashdeal.proto

/*
Package flashdeal is a generated protocol buffer package.

It is generated from these files:
	product/flashdeal/productflashdeal.proto

It has these top-level messages:
	FlashDealRequest
	FlashdealVariant
	AddFlashdealResponse
	FlashDeal
	CheckFlashDeal
	CheckFlashDealResponse
	CheckFlashDeals
	CheckFlashDealsResponse
	UpdateRemainRequest
	FlashdealVariantRemain
	UpdateRemainResponse
	GetFlashDeals
	GetFlashDealsResponse
	RemoveProductFlashDealsResponse
*/
package flashdeal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "context"
	sendo "gitlab.sendo.vn/core/golang-sdk/new"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for ProductFlashdealService service

type ProductFlashdealService interface {
	// Api add/update flashdeal data
	AddFlashDeal(sdCtx sendo.ServiceContext, ctx context.Context, in *FlashDealRequest) (*AddFlashdealResponse, error)
	// Api update flashdeal remain
	UpdateFlashDealRemain(sdCtx sendo.ServiceContext, ctx context.Context, in *UpdateRemainRequest) (*UpdateRemainResponse, error)
	// Api return flashdeal data of inputed product_id
	CheckActiveFlashDeal(sdCtx sendo.ServiceContext, ctx context.Context, in *CheckFlashDeal) (*CheckFlashDealResponse, error)
	// Api return an array of flashdeal data of inputed string product_ids
	CheckActiveFlashDeals(sdCtx sendo.ServiceContext, ctx context.Context, in *CheckFlashDeals) (*CheckFlashDealsResponse, error)
	// Api return an array of flashdeal data of inputed []int64 product_ids
	GetActiveFlashDeals(sdCtx sendo.ServiceContext, ctx context.Context, in *GetFlashDeals) (*GetFlashDealsResponse, error)
	// Remove flash deals of a product from redis
	RemoveRedisProductFlashDeals(sdCtx sendo.ServiceContext, ctx context.Context, in *CheckFlashDeal) (*RemoveProductFlashDealsResponse, error)
}

type sDProductFlashdealServiceServer struct {
	ctx sendo.ServiceContext
	sv  ProductFlashdealService
}

func NewSDProductFlashdealServiceServer(ctx sendo.ServiceContext, sv ProductFlashdealService) *sDProductFlashdealServiceServer {
	return &sDProductFlashdealServiceServer{
		sv:  sv,
		ctx: ctx,
	}
}

func (h *sDProductFlashdealServiceServer) AddFlashDeal(ctx context.Context, in *FlashDealRequest) (*AddFlashdealResponse, error) {
	return h.sv.AddFlashDeal(h.ctx, ctx, in)
}

func (h *sDProductFlashdealServiceServer) UpdateFlashDealRemain(ctx context.Context, in *UpdateRemainRequest) (*UpdateRemainResponse, error) {
	return h.sv.UpdateFlashDealRemain(h.ctx, ctx, in)
}

func (h *sDProductFlashdealServiceServer) CheckActiveFlashDeal(ctx context.Context, in *CheckFlashDeal) (*CheckFlashDealResponse, error) {
	return h.sv.CheckActiveFlashDeal(h.ctx, ctx, in)
}

func (h *sDProductFlashdealServiceServer) CheckActiveFlashDeals(ctx context.Context, in *CheckFlashDeals) (*CheckFlashDealsResponse, error) {
	return h.sv.CheckActiveFlashDeals(h.ctx, ctx, in)
}

func (h *sDProductFlashdealServiceServer) GetActiveFlashDeals(ctx context.Context, in *GetFlashDeals) (*GetFlashDealsResponse, error) {
	return h.sv.GetActiveFlashDeals(h.ctx, ctx, in)
}

func (h *sDProductFlashdealServiceServer) RemoveRedisProductFlashDeals(ctx context.Context, in *CheckFlashDeal) (*RemoveProductFlashDealsResponse, error) {
	return h.sv.RemoveRedisProductFlashDeals(h.ctx, ctx, in)
}

func AddProductFlashdealServiceHandler(service sendo.Service, sv ProductFlashdealService) {
	service.Server().AddHandler(func(gRPC *grpc.Server) {
		RegisterProductFlashdealServiceServer(gRPC, NewSDProductFlashdealServiceServer(service, sv))
	})
}
