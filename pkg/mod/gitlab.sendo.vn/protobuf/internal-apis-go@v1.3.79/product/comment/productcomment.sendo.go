// Code generated by protoc-gen-sendo. DO NOT EDIT.
// Author: Viet Tran. Software Architect - DC1
// source: product/comment/productcomment.proto

/*
Package comment is a generated protocol buffer package.

It is generated from these files:
	product/comment/productcomment.proto

It has these top-level messages:
	ListRequest
	ListResponse
	ListProductByOwnerRequest
	ListProductByOwnerResponse
	GetRepliesRequest
	GetRepliesResponse
	AddRequest
	AddResponse
	DeleteRequest
	DeleteResponse
	EditRequest
	EditResponse
	CountRequest
	CountResponse
	GetCommentDetailsRequest
	GetCommentDetailsResponse
	ListAppRequest
	ListAppResponse
	AdminDeleteRequest
	AdminDeleteResponse
	GetOwnerCommentRequest
	GetOwnerCommentResponse
*/
package comment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "gitlab.sendo.vn/protobuf/internal-apis-go/base"

import (
	context "context"
	sendo "gitlab.sendo.vn/core/golang-sdk/new"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for ProductCommentService service

type ProductCommentService interface {
	Add(sdCtx sendo.ServiceContext, ctx context.Context, in *AddRequest) (*AddResponse, error)
	Delete(sdCtx sendo.ServiceContext, ctx context.Context, in *DeleteRequest) (*DeleteResponse, error)
	Edit(sdCtx sendo.ServiceContext, ctx context.Context, in *EditRequest) (*EditResponse, error)
	// List comment by condition
	List(sdCtx sendo.ServiceContext, ctx context.Context, in *ListRequest) (*ListResponse, error)
	// Get comment replies
	GetReplies(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRepliesRequest) (*GetRepliesResponse, error)
	// list product by owner
	ListProductByOwner(sdCtx sendo.ServiceContext, ctx context.Context, in *ListProductByOwnerRequest) (*ListProductByOwnerResponse, error)
	// Get total comment
	Count(sdCtx sendo.ServiceContext, ctx context.Context, in *CountRequest) (*CountResponse, error)
	// Get comment details
	GetCommentDetails(sdCtx sendo.ServiceContext, ctx context.Context, in *GetCommentDetailsRequest) (*GetCommentDetailsResponse, error)
	// Get list product's comment for app
	ListApp(sdCtx sendo.ServiceContext, ctx context.Context, in *ListAppRequest) (*ListAppResponse, error)
	// Admin delete comment
	AdminDelete(sdCtx sendo.ServiceContext, ctx context.Context, in *AdminDeleteRequest) (*AdminDeleteResponse, error)
	// Get list owner's comment
	GetOwnerComment(sdCtx sendo.ServiceContext, ctx context.Context, in *GetOwnerCommentRequest) (*GetOwnerCommentResponse, error)
}

type sDProductCommentServiceServer struct {
	ctx sendo.ServiceContext
	sv  ProductCommentService
}

func NewSDProductCommentServiceServer(ctx sendo.ServiceContext, sv ProductCommentService) *sDProductCommentServiceServer {
	return &sDProductCommentServiceServer{
		sv:  sv,
		ctx: ctx,
	}
}

func (h *sDProductCommentServiceServer) Add(ctx context.Context, in *AddRequest) (*AddResponse, error) {
	return h.sv.Add(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) Delete(ctx context.Context, in *DeleteRequest) (*DeleteResponse, error) {
	return h.sv.Delete(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) Edit(ctx context.Context, in *EditRequest) (*EditResponse, error) {
	return h.sv.Edit(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) List(ctx context.Context, in *ListRequest) (*ListResponse, error) {
	return h.sv.List(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) GetReplies(ctx context.Context, in *GetRepliesRequest) (*GetRepliesResponse, error) {
	return h.sv.GetReplies(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) ListProductByOwner(ctx context.Context, in *ListProductByOwnerRequest) (*ListProductByOwnerResponse, error) {
	return h.sv.ListProductByOwner(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) Count(ctx context.Context, in *CountRequest) (*CountResponse, error) {
	return h.sv.Count(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) GetCommentDetails(ctx context.Context, in *GetCommentDetailsRequest) (*GetCommentDetailsResponse, error) {
	return h.sv.GetCommentDetails(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) ListApp(ctx context.Context, in *ListAppRequest) (*ListAppResponse, error) {
	return h.sv.ListApp(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) AdminDelete(ctx context.Context, in *AdminDeleteRequest) (*AdminDeleteResponse, error) {
	return h.sv.AdminDelete(h.ctx, ctx, in)
}

func (h *sDProductCommentServiceServer) GetOwnerComment(ctx context.Context, in *GetOwnerCommentRequest) (*GetOwnerCommentResponse, error) {
	return h.sv.GetOwnerComment(h.ctx, ctx, in)
}

func AddProductCommentServiceHandler(service sendo.Service, sv ProductCommentService) {
	service.Server().AddHandler(func(gRPC *grpc.Server) {
		RegisterProductCommentServiceServer(gRPC, NewSDProductCommentServiceServer(service, sv))
	})
}
