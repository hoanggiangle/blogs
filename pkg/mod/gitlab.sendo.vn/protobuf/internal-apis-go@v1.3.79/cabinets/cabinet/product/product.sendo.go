// Code generated by protoc-gen-sendo. DO NOT EDIT.
// Author: Viet Tran. Software Architect - DC1
// source: cabinets/cabinet/product/product.proto

/*
Package product is a generated protocol buffer package.

It is generated from these files:
	cabinets/cabinet/product/product.proto

It has these top-level messages:
	AddRequest
	AddResponse
	RemoveRequest
	RemoveResponse
	ListRequest
	ListResponse
	ListResponseData
	Filter
*/
package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "gitlab.sendo.vn/protobuf/internal-apis-go/cabinets"
import _ "gitlab.sendo.vn/protobuf/internal-apis-go/base"

import (
	context "context"
	sendo "gitlab.sendo.vn/core/golang-sdk/new"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for ProductService service

type ProductService interface {
	Add(sdCtx sendo.ServiceContext, ctx context.Context, in *AddRequest) (*AddResponse, error)
	Remove(sdCtx sendo.ServiceContext, ctx context.Context, in *RemoveRequest) (*RemoveResponse, error)
	List(sdCtx sendo.ServiceContext, ctx context.Context, in *ListRequest) (*ListResponse, error)
}

type sDProductServiceServer struct {
	ctx sendo.ServiceContext
	sv  ProductService
}

func NewSDProductServiceServer(ctx sendo.ServiceContext, sv ProductService) *sDProductServiceServer {
	return &sDProductServiceServer{
		sv:  sv,
		ctx: ctx,
	}
}

func (h *sDProductServiceServer) Add(ctx context.Context, in *AddRequest) (*AddResponse, error) {
	return h.sv.Add(h.ctx, ctx, in)
}

func (h *sDProductServiceServer) Remove(ctx context.Context, in *RemoveRequest) (*RemoveResponse, error) {
	return h.sv.Remove(h.ctx, ctx, in)
}

func (h *sDProductServiceServer) List(ctx context.Context, in *ListRequest) (*ListResponse, error) {
	return h.sv.List(h.ctx, ctx, in)
}

func AddProductServiceHandler(service sendo.Service, sv ProductService) {
	service.Server().AddHandler(func(gRPC *grpc.Server) {
		RegisterProductServiceServer(gRPC, NewSDProductServiceServer(service, sv))
	})
}
