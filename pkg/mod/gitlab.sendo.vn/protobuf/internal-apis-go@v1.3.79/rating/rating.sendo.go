// Code generated by protoc-gen-sendo. DO NOT EDIT.
// Author: Viet Tran. Software Architect - DC1
// source: rating/rating.proto

/*
Package rating is a generated protocol buffer package.

It is generated from these files:
	rating/rating.proto

It has these top-level messages:
	RestResponseWithData
	RestResponseNonData
	RatingComment
	RatingContent
	DataGetRatingByProduct
	DataGetComments
	DataGetRatingByMerchant
	DataGetRatingByOrder
	DataGetRatingImageByProduct
	ImageRating
	DataGetRatingImageByMerchant
	DataGetRatingCommentByRating
	RatingInfoContent
	FilterSubject
	RatingContentRequest
	RatingContentUpdateRequest
	ProductInfoRating
	AddRatingRequest
	AddRatingAgainRequest
	UpdateRatingRequest
	DeleteRatingRequest
	GetRatingByProductRequest
	GetRatingImagesByProductRequest
	GetRatingByMerchantRequest
	GetRatingImagesByMerchantRequest
	GetRatingByOrderRequest
	GetRatingInfoByProductRequest
	GetRatingInfoByMerchantRequest
	GetRatingCommentByRatingIdRequest
	MigrateRatingFromMongoDbRequest
	MigrateRatingAgainFromMongoDbRequest
	CronUpdateDataRequest
	LikeDataRequest
	AddCommentRequest
	DeleteCommentRequest
	DeleteCommentByAdminRequest
	AddCommentResponse
	GetRatingByProductResponse
	GetCommentsResponse
	GetRatingImagesByProductResponse
	GetRatingByMerchantResponse
	GetRatingImagesByMerchantResponse
	GetRatingByOrderResponse
	GetRatingInfoByProductResponse
	GetRatingInfoByMerchantResponse
	ListAppResponse
	DataGetCommentByRatingId
*/
package rating

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "gitlab.sendo.vn/protobuf/internal-apis-go/base"

import (
	context "context"
	sendo "gitlab.sendo.vn/core/golang-sdk/new"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// Client API for RatingService service

type RatingService interface {
	// Add rating for user
	AddRating(sdCtx sendo.ServiceContext, ctx context.Context, in *AddRatingRequest) (*RestResponseNonData, error)
	// Update rating for user
	AddRatingAgain(sdCtx sendo.ServiceContext, ctx context.Context, in *AddRatingAgainRequest) (*RestResponseNonData, error)
	// Comment for 1 rating
	AddRatingComment(sdCtx sendo.ServiceContext, ctx context.Context, in *AddCommentRequest) (*AddCommentResponse, error)
	// Update rating for admin
	UpdateRating(sdCtx sendo.ServiceContext, ctx context.Context, in *UpdateRatingRequest) (*RestResponseNonData, error)
	// Delete specified rating
	DeleteRating(sdCtx sendo.ServiceContext, ctx context.Context, in *DeleteRatingRequest) (*RestResponseNonData, error)
	// Get rating list in product detail
	GetRatingByProduct(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingByProductRequest) (*GetRatingByProductResponse, error)
	// Get rating image list in product detail
	GetRatingImageByProduct(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingImagesByProductRequest) (*GetRatingImagesByProductResponse, error)
	// Get rating list in shop detail
	GetRatingByMerchant(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingByMerchantRequest) (*GetRatingByMerchantResponse, error)
	// Get rating image list in shop detail
	GetRatingImageByMerchant(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingImagesByMerchantRequest) (*GetRatingImagesByMerchantResponse, error)
	// Get rating list in profile page
	GetRatingByOrder(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingByOrderRequest) (*GetRatingByOrderResponse, error)
	// Get rating info in product detail
	GetRatingInfoByProduct(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingInfoByProductRequest) (*GetRatingInfoByProductResponse, error)
	// Get rating info in shop detail
	GetRatingInfoByMerchant(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingInfoByMerchantRequest) (*GetRatingInfoByMerchantResponse, error)
	// Get comment for rating id
	GetRatingCommentByRatingId(sdCtx sendo.ServiceContext, ctx context.Context, in *GetRatingCommentByRatingIdRequest) (*DataGetCommentByRatingId, error)
	// Delete comment for user
	DeleteCommentRatingComment(sdCtx sendo.ServiceContext, ctx context.Context, in *DeleteCommentRequest) (*RestResponseNonData, error)
	// Delete comment for admin
	DeleteCommentByAdminRatingComment(sdCtx sendo.ServiceContext, ctx context.Context, in *DeleteCommentByAdminRequest) (*RestResponseNonData, error)
	MigrateRatingFromMongoDb(sdCtx sendo.ServiceContext, ctx context.Context, in *MigrateRatingFromMongoDbRequest) (*RestResponseNonData, error)
	MigrateRatingAgainFromMongoDb(sdCtx sendo.ServiceContext, ctx context.Context, in *MigrateRatingAgainFromMongoDbRequest) (*RestResponseNonData, error)
	MigrateRatingMerchantScoreFromMongoDb(sdCtx sendo.ServiceContext, ctx context.Context, in *MigrateRatingFromMongoDbRequest) (*RestResponseNonData, error)
	CronUpdateData(sdCtx sendo.ServiceContext, ctx context.Context, in *CronUpdateDataRequest) (*RestResponseNonData, error)
	// Like and Unlike for user
	LikeUnLike(sdCtx sendo.ServiceContext, ctx context.Context, in *LikeDataRequest) (*RestResponseNonData, error)
}

type sDRatingServiceServer struct {
	ctx sendo.ServiceContext
	sv  RatingService
}

func NewSDRatingServiceServer(ctx sendo.ServiceContext, sv RatingService) *sDRatingServiceServer {
	return &sDRatingServiceServer{
		sv:  sv,
		ctx: ctx,
	}
}

func (h *sDRatingServiceServer) AddRating(ctx context.Context, in *AddRatingRequest) (*RestResponseNonData, error) {
	return h.sv.AddRating(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) AddRatingAgain(ctx context.Context, in *AddRatingAgainRequest) (*RestResponseNonData, error) {
	return h.sv.AddRatingAgain(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) AddRatingComment(ctx context.Context, in *AddCommentRequest) (*AddCommentResponse, error) {
	return h.sv.AddRatingComment(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) UpdateRating(ctx context.Context, in *UpdateRatingRequest) (*RestResponseNonData, error) {
	return h.sv.UpdateRating(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) DeleteRating(ctx context.Context, in *DeleteRatingRequest) (*RestResponseNonData, error) {
	return h.sv.DeleteRating(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingByProduct(ctx context.Context, in *GetRatingByProductRequest) (*GetRatingByProductResponse, error) {
	return h.sv.GetRatingByProduct(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingImageByProduct(ctx context.Context, in *GetRatingImagesByProductRequest) (*GetRatingImagesByProductResponse, error) {
	return h.sv.GetRatingImageByProduct(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingByMerchant(ctx context.Context, in *GetRatingByMerchantRequest) (*GetRatingByMerchantResponse, error) {
	return h.sv.GetRatingByMerchant(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingImageByMerchant(ctx context.Context, in *GetRatingImagesByMerchantRequest) (*GetRatingImagesByMerchantResponse, error) {
	return h.sv.GetRatingImageByMerchant(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingByOrder(ctx context.Context, in *GetRatingByOrderRequest) (*GetRatingByOrderResponse, error) {
	return h.sv.GetRatingByOrder(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingInfoByProduct(ctx context.Context, in *GetRatingInfoByProductRequest) (*GetRatingInfoByProductResponse, error) {
	return h.sv.GetRatingInfoByProduct(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingInfoByMerchant(ctx context.Context, in *GetRatingInfoByMerchantRequest) (*GetRatingInfoByMerchantResponse, error) {
	return h.sv.GetRatingInfoByMerchant(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) GetRatingCommentByRatingId(ctx context.Context, in *GetRatingCommentByRatingIdRequest) (*DataGetCommentByRatingId, error) {
	return h.sv.GetRatingCommentByRatingId(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) DeleteCommentRatingComment(ctx context.Context, in *DeleteCommentRequest) (*RestResponseNonData, error) {
	return h.sv.DeleteCommentRatingComment(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) DeleteCommentByAdminRatingComment(ctx context.Context, in *DeleteCommentByAdminRequest) (*RestResponseNonData, error) {
	return h.sv.DeleteCommentByAdminRatingComment(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) MigrateRatingFromMongoDb(ctx context.Context, in *MigrateRatingFromMongoDbRequest) (*RestResponseNonData, error) {
	return h.sv.MigrateRatingFromMongoDb(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) MigrateRatingAgainFromMongoDb(ctx context.Context, in *MigrateRatingAgainFromMongoDbRequest) (*RestResponseNonData, error) {
	return h.sv.MigrateRatingAgainFromMongoDb(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) MigrateRatingMerchantScoreFromMongoDb(ctx context.Context, in *MigrateRatingFromMongoDbRequest) (*RestResponseNonData, error) {
	return h.sv.MigrateRatingMerchantScoreFromMongoDb(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) CronUpdateData(ctx context.Context, in *CronUpdateDataRequest) (*RestResponseNonData, error) {
	return h.sv.CronUpdateData(h.ctx, ctx, in)
}

func (h *sDRatingServiceServer) LikeUnLike(ctx context.Context, in *LikeDataRequest) (*RestResponseNonData, error) {
	return h.sv.LikeUnLike(h.ctx, ctx, in)
}

func AddRatingServiceHandler(service sendo.Service, sv RatingService) {
	service.Server().AddHandler(func(gRPC *grpc.Server) {
		RegisterRatingServiceServer(gRPC, NewSDRatingServiceServer(service, sv))
	})
}
