// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: seller/store/store.proto

package store // import "gitlab.sendo.vn/protobuf/internal-apis-go/seller/store"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

import encoding_binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type AlowCheckOrderRes struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlowCheckOrderRes) Reset()         { *m = AlowCheckOrderRes{} }
func (m *AlowCheckOrderRes) String() string { return proto.CompactTextString(m) }
func (*AlowCheckOrderRes) ProtoMessage()    {}
func (*AlowCheckOrderRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{0}
}
func (m *AlowCheckOrderRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AlowCheckOrderRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AlowCheckOrderRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *AlowCheckOrderRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlowCheckOrderRes.Merge(dst, src)
}
func (m *AlowCheckOrderRes) XXX_Size() int {
	return m.Size()
}
func (m *AlowCheckOrderRes) XXX_DiscardUnknown() {
	xxx_messageInfo_AlowCheckOrderRes.DiscardUnknown(m)
}

var xxx_messageInfo_AlowCheckOrderRes proto.InternalMessageInfo

func (m *AlowCheckOrderRes) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type MenuRep struct {
	Data                 []*SendoMenu `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MenuRep) Reset()         { *m = MenuRep{} }
func (m *MenuRep) String() string { return proto.CompactTextString(m) }
func (*MenuRep) ProtoMessage()    {}
func (*MenuRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{1}
}
func (m *MenuRep) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MenuRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MenuRep.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *MenuRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MenuRep.Merge(dst, src)
}
func (m *MenuRep) XXX_Size() int {
	return m.Size()
}
func (m *MenuRep) XXX_DiscardUnknown() {
	xxx_messageInfo_MenuRep.DiscardUnknown(m)
}

var xxx_messageInfo_MenuRep proto.InternalMessageInfo

func (m *MenuRep) GetData() []*SendoMenu {
	if m != nil {
		return m.Data
	}
	return nil
}

type MenuRes struct {
	StoreId              int32    `protobuf:"varint,1,opt,name=storeId,proto3" json:"storeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MenuRes) Reset()         { *m = MenuRes{} }
func (m *MenuRes) String() string { return proto.CompactTextString(m) }
func (*MenuRes) ProtoMessage()    {}
func (*MenuRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{2}
}
func (m *MenuRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MenuRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MenuRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *MenuRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MenuRes.Merge(dst, src)
}
func (m *MenuRes) XXX_Size() int {
	return m.Size()
}
func (m *MenuRes) XXX_DiscardUnknown() {
	xxx_messageInfo_MenuRes.DiscardUnknown(m)
}

var xxx_messageInfo_MenuRes proto.InternalMessageInfo

func (m *MenuRes) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

type SendoMenu struct {
	MenuName             string       `protobuf:"bytes,1,opt,name=MenuName,proto3" json:"MenuName,omitempty"`
	MenuCode             string       `protobuf:"bytes,2,opt,name=MenuCode,proto3" json:"MenuCode,omitempty"`
	MenuStyle            string       `protobuf:"bytes,3,opt,name=MenuStyle,proto3" json:"MenuStyle,omitempty"`
	MenuUrl              string       `protobuf:"bytes,4,opt,name=MenuUrl,proto3" json:"MenuUrl,omitempty"`
	MenuUrlSpa           string       `protobuf:"bytes,5,opt,name=MenuUrlSpa,proto3" json:"MenuUrlSpa,omitempty"`
	MenuID               int32        `protobuf:"varint,6,opt,name=MenuID,proto3" json:"MenuID,omitempty"`
	Menus                []*SendoMenu `protobuf:"bytes,7,rep,name=Menus" json:"Menus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SendoMenu) Reset()         { *m = SendoMenu{} }
func (m *SendoMenu) String() string { return proto.CompactTextString(m) }
func (*SendoMenu) ProtoMessage()    {}
func (*SendoMenu) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{3}
}
func (m *SendoMenu) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendoMenu) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendoMenu.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *SendoMenu) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendoMenu.Merge(dst, src)
}
func (m *SendoMenu) XXX_Size() int {
	return m.Size()
}
func (m *SendoMenu) XXX_DiscardUnknown() {
	xxx_messageInfo_SendoMenu.DiscardUnknown(m)
}

var xxx_messageInfo_SendoMenu proto.InternalMessageInfo

func (m *SendoMenu) GetMenuName() string {
	if m != nil {
		return m.MenuName
	}
	return ""
}

func (m *SendoMenu) GetMenuCode() string {
	if m != nil {
		return m.MenuCode
	}
	return ""
}

func (m *SendoMenu) GetMenuStyle() string {
	if m != nil {
		return m.MenuStyle
	}
	return ""
}

func (m *SendoMenu) GetMenuUrl() string {
	if m != nil {
		return m.MenuUrl
	}
	return ""
}

func (m *SendoMenu) GetMenuUrlSpa() string {
	if m != nil {
		return m.MenuUrlSpa
	}
	return ""
}

func (m *SendoMenu) GetMenuID() int32 {
	if m != nil {
		return m.MenuID
	}
	return 0
}

func (m *SendoMenu) GetMenus() []*SendoMenu {
	if m != nil {
		return m.Menus
	}
	return nil
}

type RegShopStep2Req struct {
	ShopName             string   `protobuf:"bytes,1,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	PhoneNumber          string   `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Otp                  string   `protobuf:"bytes,3,opt,name=otp,proto3" json:"otp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegShopStep2Req) Reset()         { *m = RegShopStep2Req{} }
func (m *RegShopStep2Req) String() string { return proto.CompactTextString(m) }
func (*RegShopStep2Req) ProtoMessage()    {}
func (*RegShopStep2Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{4}
}
func (m *RegShopStep2Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegShopStep2Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegShopStep2Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegShopStep2Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegShopStep2Req.Merge(dst, src)
}
func (m *RegShopStep2Req) XXX_Size() int {
	return m.Size()
}
func (m *RegShopStep2Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RegShopStep2Req.DiscardUnknown(m)
}

var xxx_messageInfo_RegShopStep2Req proto.InternalMessageInfo

func (m *RegShopStep2Req) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *RegShopStep2Req) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *RegShopStep2Req) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

type RegShopStep3Req struct {
	ShopAddress          string   `protobuf:"bytes,1,opt,name=shop_address,json=shopAddress,proto3" json:"shop_address,omitempty"`
	ShopWardId           int32    `protobuf:"varint,2,opt,name=shop_ward_id,json=shopWardId,proto3" json:"shop_ward_id,omitempty"`
	ShopDistrictId       int32    `protobuf:"varint,3,opt,name=shop_district_id,json=shopDistrictId,proto3" json:"shop_district_id,omitempty"`
	ShopRegionId         int32    `protobuf:"varint,4,opt,name=shop_region_id,json=shopRegionId,proto3" json:"shop_region_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegShopStep3Req) Reset()         { *m = RegShopStep3Req{} }
func (m *RegShopStep3Req) String() string { return proto.CompactTextString(m) }
func (*RegShopStep3Req) ProtoMessage()    {}
func (*RegShopStep3Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{5}
}
func (m *RegShopStep3Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegShopStep3Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegShopStep3Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegShopStep3Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegShopStep3Req.Merge(dst, src)
}
func (m *RegShopStep3Req) XXX_Size() int {
	return m.Size()
}
func (m *RegShopStep3Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RegShopStep3Req.DiscardUnknown(m)
}

var xxx_messageInfo_RegShopStep3Req proto.InternalMessageInfo

func (m *RegShopStep3Req) GetShopAddress() string {
	if m != nil {
		return m.ShopAddress
	}
	return ""
}

func (m *RegShopStep3Req) GetShopWardId() int32 {
	if m != nil {
		return m.ShopWardId
	}
	return 0
}

func (m *RegShopStep3Req) GetShopDistrictId() int32 {
	if m != nil {
		return m.ShopDistrictId
	}
	return 0
}

func (m *RegShopStep3Req) GetShopRegionId() int32 {
	if m != nil {
		return m.ShopRegionId
	}
	return 0
}

type RegShopStep4Req struct {
	UserAgentString      string   `protobuf:"bytes,1,opt,name=user_agent_string,json=userAgentString,proto3" json:"user_agent_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegShopStep4Req) Reset()         { *m = RegShopStep4Req{} }
func (m *RegShopStep4Req) String() string { return proto.CompactTextString(m) }
func (*RegShopStep4Req) ProtoMessage()    {}
func (*RegShopStep4Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{6}
}
func (m *RegShopStep4Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegShopStep4Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegShopStep4Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegShopStep4Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegShopStep4Req.Merge(dst, src)
}
func (m *RegShopStep4Req) XXX_Size() int {
	return m.Size()
}
func (m *RegShopStep4Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RegShopStep4Req.DiscardUnknown(m)
}

var xxx_messageInfo_RegShopStep4Req proto.InternalMessageInfo

func (m *RegShopStep4Req) GetUserAgentString() string {
	if m != nil {
		return m.UserAgentString
	}
	return ""
}

type RegShopStep5Req struct {
	ShopType             int32    `protobuf:"varint,1,opt,name=shop_type,json=shopType,proto3" json:"shop_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegShopStep5Req) Reset()         { *m = RegShopStep5Req{} }
func (m *RegShopStep5Req) String() string { return proto.CompactTextString(m) }
func (*RegShopStep5Req) ProtoMessage()    {}
func (*RegShopStep5Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{7}
}
func (m *RegShopStep5Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegShopStep5Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegShopStep5Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegShopStep5Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegShopStep5Req.Merge(dst, src)
}
func (m *RegShopStep5Req) XXX_Size() int {
	return m.Size()
}
func (m *RegShopStep5Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RegShopStep5Req.DiscardUnknown(m)
}

var xxx_messageInfo_RegShopStep5Req proto.InternalMessageInfo

func (m *RegShopStep5Req) GetShopType() int32 {
	if m != nil {
		return m.ShopType
	}
	return 0
}

type RegShopStep6Req struct {
	ShopUrl              string   `protobuf:"bytes,1,opt,name=shop_url,json=shopUrl,proto3" json:"shop_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegShopStep6Req) Reset()         { *m = RegShopStep6Req{} }
func (m *RegShopStep6Req) String() string { return proto.CompactTextString(m) }
func (*RegShopStep6Req) ProtoMessage()    {}
func (*RegShopStep6Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{8}
}
func (m *RegShopStep6Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegShopStep6Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegShopStep6Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegShopStep6Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegShopStep6Req.Merge(dst, src)
}
func (m *RegShopStep6Req) XXX_Size() int {
	return m.Size()
}
func (m *RegShopStep6Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RegShopStep6Req.DiscardUnknown(m)
}

var xxx_messageInfo_RegShopStep6Req proto.InternalMessageInfo

func (m *RegShopStep6Req) GetShopUrl() string {
	if m != nil {
		return m.ShopUrl
	}
	return ""
}

type RegShopStep7Req struct {
	Code                  string           `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Email                 string           `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	ExternalLinkShop      string           `protobuf:"bytes,3,opt,name=external_link_shop,json=externalLinkShop,proto3" json:"external_link_shop,omitempty"`
	ShopRepresentative    string           `protobuf:"bytes,4,opt,name=shop_representative,json=shopRepresentative,proto3" json:"shop_representative,omitempty"`
	CompanyName           string           `protobuf:"bytes,5,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	BusinessLicenseNumber string           `protobuf:"bytes,6,opt,name=business_license_number,json=businessLicenseNumber,proto3" json:"business_license_number,omitempty"`
	BusinessType          int32            `protobuf:"varint,7,opt,name=business_type,json=businessType,proto3" json:"business_type,omitempty"`
	IsUseWarehouseAddress bool             `protobuf:"varint,8,opt,name=is_use_warehouse_address,json=isUseWarehouseAddress,proto3" json:"is_use_warehouse_address,omitempty"`
	Phone                 string           `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	Mobile                string           `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile,omitempty"`
	ShopAddress           string           `protobuf:"bytes,11,opt,name=shop_address,json=shopAddress,proto3" json:"shop_address,omitempty"`
	ShopWardId            int32            `protobuf:"varint,12,opt,name=shop_ward_id,json=shopWardId,proto3" json:"shop_ward_id,omitempty"`
	ShopDistrictId        int32            `protobuf:"varint,13,opt,name=shop_district_id,json=shopDistrictId,proto3" json:"shop_district_id,omitempty"`
	ShopRegionId          int32            `protobuf:"varint,14,opt,name=shop_region_id,json=shopRegionId,proto3" json:"shop_region_id,omitempty"`
	FileAttachment        string           `protobuf:"bytes,15,opt,name=file_attachment,json=fileAttachment,proto3" json:"file_attachment,omitempty"`
	FileAttachments       []*FileUploadDto `protobuf:"bytes,16,rep,name=file_attachments,json=fileAttachments" json:"file_attachments,omitempty"`
	IdentificationNumber  string           `protobuf:"bytes,17,opt,name=identification_number,json=identificationNumber,proto3" json:"identification_number,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *RegShopStep7Req) Reset()         { *m = RegShopStep7Req{} }
func (m *RegShopStep7Req) String() string { return proto.CompactTextString(m) }
func (*RegShopStep7Req) ProtoMessage()    {}
func (*RegShopStep7Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{9}
}
func (m *RegShopStep7Req) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegShopStep7Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegShopStep7Req.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegShopStep7Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegShopStep7Req.Merge(dst, src)
}
func (m *RegShopStep7Req) XXX_Size() int {
	return m.Size()
}
func (m *RegShopStep7Req) XXX_DiscardUnknown() {
	xxx_messageInfo_RegShopStep7Req.DiscardUnknown(m)
}

var xxx_messageInfo_RegShopStep7Req proto.InternalMessageInfo

func (m *RegShopStep7Req) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RegShopStep7Req) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegShopStep7Req) GetExternalLinkShop() string {
	if m != nil {
		return m.ExternalLinkShop
	}
	return ""
}

func (m *RegShopStep7Req) GetShopRepresentative() string {
	if m != nil {
		return m.ShopRepresentative
	}
	return ""
}

func (m *RegShopStep7Req) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *RegShopStep7Req) GetBusinessLicenseNumber() string {
	if m != nil {
		return m.BusinessLicenseNumber
	}
	return ""
}

func (m *RegShopStep7Req) GetBusinessType() int32 {
	if m != nil {
		return m.BusinessType
	}
	return 0
}

func (m *RegShopStep7Req) GetIsUseWarehouseAddress() bool {
	if m != nil {
		return m.IsUseWarehouseAddress
	}
	return false
}

func (m *RegShopStep7Req) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *RegShopStep7Req) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *RegShopStep7Req) GetShopAddress() string {
	if m != nil {
		return m.ShopAddress
	}
	return ""
}

func (m *RegShopStep7Req) GetShopWardId() int32 {
	if m != nil {
		return m.ShopWardId
	}
	return 0
}

func (m *RegShopStep7Req) GetShopDistrictId() int32 {
	if m != nil {
		return m.ShopDistrictId
	}
	return 0
}

func (m *RegShopStep7Req) GetShopRegionId() int32 {
	if m != nil {
		return m.ShopRegionId
	}
	return 0
}

func (m *RegShopStep7Req) GetFileAttachment() string {
	if m != nil {
		return m.FileAttachment
	}
	return ""
}

func (m *RegShopStep7Req) GetFileAttachments() []*FileUploadDto {
	if m != nil {
		return m.FileAttachments
	}
	return nil
}

func (m *RegShopStep7Req) GetIdentificationNumber() string {
	if m != nil {
		return m.IdentificationNumber
	}
	return ""
}

type FileUploadDto struct {
	FileName             string   `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	UrlFile              string   `protobuf:"bytes,2,opt,name=url_file,json=urlFile,proto3" json:"url_file,omitempty"`
	Type                 int32    `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Filebyte             []byte   `protobuf:"bytes,4,opt,name=filebyte,proto3" json:"filebyte,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileUploadDto) Reset()         { *m = FileUploadDto{} }
func (m *FileUploadDto) String() string { return proto.CompactTextString(m) }
func (*FileUploadDto) ProtoMessage()    {}
func (*FileUploadDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{10}
}
func (m *FileUploadDto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FileUploadDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FileUploadDto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *FileUploadDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileUploadDto.Merge(dst, src)
}
func (m *FileUploadDto) XXX_Size() int {
	return m.Size()
}
func (m *FileUploadDto) XXX_DiscardUnknown() {
	xxx_messageInfo_FileUploadDto.DiscardUnknown(m)
}

var xxx_messageInfo_FileUploadDto proto.InternalMessageInfo

func (m *FileUploadDto) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileUploadDto) GetUrlFile() string {
	if m != nil {
		return m.UrlFile
	}
	return ""
}

func (m *FileUploadDto) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *FileUploadDto) GetFilebyte() []byte {
	if m != nil {
		return m.Filebyte
	}
	return nil
}

type UserContextDtoRes struct {
	Data                 *UserContextDto `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	HasError             bool            `protobuf:"varint,2,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	ErrorsMess           string          `protobuf:"bytes,3,opt,name=errors_mess,json=errorsMess,proto3" json:"errors_mess,omitempty"`
	ErrorCode            int32           `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserContextDtoRes) Reset()         { *m = UserContextDtoRes{} }
func (m *UserContextDtoRes) String() string { return proto.CompactTextString(m) }
func (*UserContextDtoRes) ProtoMessage()    {}
func (*UserContextDtoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{11}
}
func (m *UserContextDtoRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserContextDtoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserContextDtoRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UserContextDtoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserContextDtoRes.Merge(dst, src)
}
func (m *UserContextDtoRes) XXX_Size() int {
	return m.Size()
}
func (m *UserContextDtoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserContextDtoRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserContextDtoRes proto.InternalMessageInfo

func (m *UserContextDtoRes) GetData() *UserContextDto {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UserContextDtoRes) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *UserContextDtoRes) GetErrorsMess() string {
	if m != nil {
		return m.ErrorsMess
	}
	return ""
}

func (m *UserContextDtoRes) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type UserContextDto struct {
	ShopName             string   `protobuf:"bytes,1,opt,name=shop_name,json=shopName,proto3" json:"shop_name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FullName             string   `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	AvatarUrl            string   `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	ShopId               int32    `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	SentSms              bool     `protobuf:"varint,6,opt,name=sent_sms,json=sentSms,proto3" json:"sent_sms,omitempty"`
	ShopStatus           int32    `protobuf:"varint,7,opt,name=shop_status,json=shopStatus,proto3" json:"shop_status,omitempty"`
	ShopUrl              string   `protobuf:"bytes,8,opt,name=shop_url,json=shopUrl,proto3" json:"shop_url,omitempty"`
	IsReview             bool     `protobuf:"varint,9,opt,name=is_review,json=isReview,proto3" json:"is_review,omitempty"`
	IsFresh              bool     `protobuf:"varint,10,opt,name=is_fresh,json=isFresh,proto3" json:"is_fresh,omitempty"`
	Token                string   `protobuf:"bytes,11,opt,name=token,proto3" json:"token,omitempty"`
	Mobile               string   `protobuf:"bytes,12,opt,name=mobile,proto3" json:"mobile,omitempty"`
	ActivityPoint        float32  `protobuf:"fixed32,14,opt,name=activity_point,json=activityPoint,proto3" json:"activity_point,omitempty"`
	ActivityPointStatus  int32    `protobuf:"varint,15,opt,name=activity_point_status,json=activityPointStatus,proto3" json:"activity_point_status,omitempty"`
	DepositAmount        int64    `protobuf:"varint,16,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount,omitempty"`
	IsAffiliate          bool     `protobuf:"varint,17,opt,name=is_affiliate,json=isAffiliate,proto3" json:"is_affiliate,omitempty"`
	IsBrandShop          bool     `protobuf:"varint,18,opt,name=is_brand_shop,json=isBrandShop,proto3" json:"is_brand_shop,omitempty"`
	IsSelfShipping       bool     `protobuf:"varint,19,opt,name=is_self_shipping,json=isSelfShipping,proto3" json:"is_self_shipping,omitempty"`
	ShopType             int32    `protobuf:"varint,20,opt,name=shop_type,json=shopType,proto3" json:"shop_type,omitempty"`
	ShopLevel            int32    `protobuf:"varint,21,opt,name=shop_level,json=shopLevel,proto3" json:"shop_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserContextDto) Reset()         { *m = UserContextDto{} }
func (m *UserContextDto) String() string { return proto.CompactTextString(m) }
func (*UserContextDto) ProtoMessage()    {}
func (*UserContextDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{12}
}
func (m *UserContextDto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserContextDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserContextDto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UserContextDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserContextDto.Merge(dst, src)
}
func (m *UserContextDto) XXX_Size() int {
	return m.Size()
}
func (m *UserContextDto) XXX_DiscardUnknown() {
	xxx_messageInfo_UserContextDto.DiscardUnknown(m)
}

var xxx_messageInfo_UserContextDto proto.InternalMessageInfo

func (m *UserContextDto) GetShopName() string {
	if m != nil {
		return m.ShopName
	}
	return ""
}

func (m *UserContextDto) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserContextDto) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *UserContextDto) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *UserContextDto) GetShopId() int32 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *UserContextDto) GetSentSms() bool {
	if m != nil {
		return m.SentSms
	}
	return false
}

func (m *UserContextDto) GetShopStatus() int32 {
	if m != nil {
		return m.ShopStatus
	}
	return 0
}

func (m *UserContextDto) GetShopUrl() string {
	if m != nil {
		return m.ShopUrl
	}
	return ""
}

func (m *UserContextDto) GetIsReview() bool {
	if m != nil {
		return m.IsReview
	}
	return false
}

func (m *UserContextDto) GetIsFresh() bool {
	if m != nil {
		return m.IsFresh
	}
	return false
}

func (m *UserContextDto) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *UserContextDto) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserContextDto) GetActivityPoint() float32 {
	if m != nil {
		return m.ActivityPoint
	}
	return 0
}

func (m *UserContextDto) GetActivityPointStatus() int32 {
	if m != nil {
		return m.ActivityPointStatus
	}
	return 0
}

func (m *UserContextDto) GetDepositAmount() int64 {
	if m != nil {
		return m.DepositAmount
	}
	return 0
}

func (m *UserContextDto) GetIsAffiliate() bool {
	if m != nil {
		return m.IsAffiliate
	}
	return false
}

func (m *UserContextDto) GetIsBrandShop() bool {
	if m != nil {
		return m.IsBrandShop
	}
	return false
}

func (m *UserContextDto) GetIsSelfShipping() bool {
	if m != nil {
		return m.IsSelfShipping
	}
	return false
}

func (m *UserContextDto) GetShopType() int32 {
	if m != nil {
		return m.ShopType
	}
	return 0
}

func (m *UserContextDto) GetShopLevel() int32 {
	if m != nil {
		return m.ShopLevel
	}
	return 0
}

type CheckExistsUsershopWithoutAuthenReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckExistsUsershopWithoutAuthenReq) Reset()         { *m = CheckExistsUsershopWithoutAuthenReq{} }
func (m *CheckExistsUsershopWithoutAuthenReq) String() string { return proto.CompactTextString(m) }
func (*CheckExistsUsershopWithoutAuthenReq) ProtoMessage()    {}
func (*CheckExistsUsershopWithoutAuthenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{13}
}
func (m *CheckExistsUsershopWithoutAuthenReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckExistsUsershopWithoutAuthenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckExistsUsershopWithoutAuthenReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CheckExistsUsershopWithoutAuthenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckExistsUsershopWithoutAuthenReq.Merge(dst, src)
}
func (m *CheckExistsUsershopWithoutAuthenReq) XXX_Size() int {
	return m.Size()
}
func (m *CheckExistsUsershopWithoutAuthenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckExistsUsershopWithoutAuthenReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckExistsUsershopWithoutAuthenReq proto.InternalMessageInfo

func (m *CheckExistsUsershopWithoutAuthenReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CheckExistsUsershopWithoutAuthenRes struct {
	Data                 int32    `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
	HasError             bool     `protobuf:"varint,2,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckExistsUsershopWithoutAuthenRes) Reset()         { *m = CheckExistsUsershopWithoutAuthenRes{} }
func (m *CheckExistsUsershopWithoutAuthenRes) String() string { return proto.CompactTextString(m) }
func (*CheckExistsUsershopWithoutAuthenRes) ProtoMessage()    {}
func (*CheckExistsUsershopWithoutAuthenRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{14}
}
func (m *CheckExistsUsershopWithoutAuthenRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckExistsUsershopWithoutAuthenRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckExistsUsershopWithoutAuthenRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CheckExistsUsershopWithoutAuthenRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckExistsUsershopWithoutAuthenRes.Merge(dst, src)
}
func (m *CheckExistsUsershopWithoutAuthenRes) XXX_Size() int {
	return m.Size()
}
func (m *CheckExistsUsershopWithoutAuthenRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckExistsUsershopWithoutAuthenRes.DiscardUnknown(m)
}

var xxx_messageInfo_CheckExistsUsershopWithoutAuthenRes proto.InternalMessageInfo

func (m *CheckExistsUsershopWithoutAuthenRes) GetData() int32 {
	if m != nil {
		return m.Data
	}
	return 0
}

func (m *CheckExistsUsershopWithoutAuthenRes) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *CheckExistsUsershopWithoutAuthenRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CheckRegisterAndSendOtpRes struct {
	HasError             bool     `protobuf:"varint,1,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRegisterAndSendOtpRes) Reset()         { *m = CheckRegisterAndSendOtpRes{} }
func (m *CheckRegisterAndSendOtpRes) String() string { return proto.CompactTextString(m) }
func (*CheckRegisterAndSendOtpRes) ProtoMessage()    {}
func (*CheckRegisterAndSendOtpRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{15}
}
func (m *CheckRegisterAndSendOtpRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckRegisterAndSendOtpRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckRegisterAndSendOtpRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *CheckRegisterAndSendOtpRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRegisterAndSendOtpRes.Merge(dst, src)
}
func (m *CheckRegisterAndSendOtpRes) XXX_Size() int {
	return m.Size()
}
func (m *CheckRegisterAndSendOtpRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRegisterAndSendOtpRes.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRegisterAndSendOtpRes proto.InternalMessageInfo

func (m *CheckRegisterAndSendOtpRes) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *CheckRegisterAndSendOtpRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ApiRes struct {
	HasError             bool     `protobuf:"varint,1,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApiRes) Reset()         { *m = ApiRes{} }
func (m *ApiRes) String() string { return proto.CompactTextString(m) }
func (*ApiRes) ProtoMessage()    {}
func (*ApiRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{16}
}
func (m *ApiRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApiRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApiRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ApiRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApiRes.Merge(dst, src)
}
func (m *ApiRes) XXX_Size() int {
	return m.Size()
}
func (m *ApiRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ApiRes.DiscardUnknown(m)
}

var xxx_messageInfo_ApiRes proto.InternalMessageInfo

func (m *ApiRes) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *ApiRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RegionRes struct {
	Data                 []*Region `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegionRes) Reset()         { *m = RegionRes{} }
func (m *RegionRes) String() string { return proto.CompactTextString(m) }
func (*RegionRes) ProtoMessage()    {}
func (*RegionRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{17}
}
func (m *RegionRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegionRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegionRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegionRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionRes.Merge(dst, src)
}
func (m *RegionRes) XXX_Size() int {
	return m.Size()
}
func (m *RegionRes) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionRes.DiscardUnknown(m)
}

var xxx_messageInfo_RegionRes proto.InternalMessageInfo

func (m *RegionRes) GetData() []*Region {
	if m != nil {
		return m.Data
	}
	return nil
}

type Region struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{18}
}
func (m *Region) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Region.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(dst, src)
}
func (m *Region) XXX_Size() int {
	return m.Size()
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Region) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DistrictRes struct {
	Data                 []*District `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DistrictRes) Reset()         { *m = DistrictRes{} }
func (m *DistrictRes) String() string { return proto.CompactTextString(m) }
func (*DistrictRes) ProtoMessage()    {}
func (*DistrictRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{19}
}
func (m *DistrictRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistrictRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistrictRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DistrictRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictRes.Merge(dst, src)
}
func (m *DistrictRes) XXX_Size() int {
	return m.Size()
}
func (m *DistrictRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictRes.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictRes proto.InternalMessageInfo

func (m *DistrictRes) GetData() []*District {
	if m != nil {
		return m.Data
	}
	return nil
}

type District struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *District) Reset()         { *m = District{} }
func (m *District) String() string { return proto.CompactTextString(m) }
func (*District) ProtoMessage()    {}
func (*District) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{20}
}
func (m *District) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *District) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_District.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *District) XXX_Merge(src proto.Message) {
	xxx_messageInfo_District.Merge(dst, src)
}
func (m *District) XXX_Size() int {
	return m.Size()
}
func (m *District) XXX_DiscardUnknown() {
	xxx_messageInfo_District.DiscardUnknown(m)
}

var xxx_messageInfo_District proto.InternalMessageInfo

func (m *District) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *District) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DistrictWardRes struct {
	Data                 []*DistrictWard `protobuf:"bytes,1,rep,name=Data" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DistrictWardRes) Reset()         { *m = DistrictWardRes{} }
func (m *DistrictWardRes) String() string { return proto.CompactTextString(m) }
func (*DistrictWardRes) ProtoMessage()    {}
func (*DistrictWardRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{21}
}
func (m *DistrictWardRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistrictWardRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistrictWardRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DistrictWardRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictWardRes.Merge(dst, src)
}
func (m *DistrictWardRes) XXX_Size() int {
	return m.Size()
}
func (m *DistrictWardRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictWardRes.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictWardRes proto.InternalMessageInfo

func (m *DistrictWardRes) GetData() []*DistrictWard {
	if m != nil {
		return m.Data
	}
	return nil
}

type DistrictWard struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistrictWard) Reset()         { *m = DistrictWard{} }
func (m *DistrictWard) String() string { return proto.CompactTextString(m) }
func (*DistrictWard) ProtoMessage()    {}
func (*DistrictWard) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{22}
}
func (m *DistrictWard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistrictWard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistrictWard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DistrictWard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictWard.Merge(dst, src)
}
func (m *DistrictWard) XXX_Size() int {
	return m.Size()
}
func (m *DistrictWard) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictWard.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictWard proto.InternalMessageInfo

func (m *DistrictWard) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DistrictWard) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RegionReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegionReq) Reset()         { *m = RegionReq{} }
func (m *RegionReq) String() string { return proto.CompactTextString(m) }
func (*RegionReq) ProtoMessage()    {}
func (*RegionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{23}
}
func (m *RegionReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegionReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionReq.Merge(dst, src)
}
func (m *RegionReq) XXX_Size() int {
	return m.Size()
}
func (m *RegionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegionReq proto.InternalMessageInfo

type RegionWHReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegionWHReq) Reset()         { *m = RegionWHReq{} }
func (m *RegionWHReq) String() string { return proto.CompactTextString(m) }
func (*RegionWHReq) ProtoMessage()    {}
func (*RegionWHReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{24}
}
func (m *RegionWHReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegionWHReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegionWHReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *RegionWHReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionWHReq.Merge(dst, src)
}
func (m *RegionWHReq) XXX_Size() int {
	return m.Size()
}
func (m *RegionWHReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionWHReq.DiscardUnknown(m)
}

var xxx_messageInfo_RegionWHReq proto.InternalMessageInfo

type DistrictReq struct {
	RegionId             int32    `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistrictReq) Reset()         { *m = DistrictReq{} }
func (m *DistrictReq) String() string { return proto.CompactTextString(m) }
func (*DistrictReq) ProtoMessage()    {}
func (*DistrictReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{25}
}
func (m *DistrictReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistrictReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistrictReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DistrictReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictReq.Merge(dst, src)
}
func (m *DistrictReq) XXX_Size() int {
	return m.Size()
}
func (m *DistrictReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictReq.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictReq proto.InternalMessageInfo

func (m *DistrictReq) GetRegionId() int32 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

type DistrictWHReq struct {
	RegionId             int32    `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistrictWHReq) Reset()         { *m = DistrictWHReq{} }
func (m *DistrictWHReq) String() string { return proto.CompactTextString(m) }
func (*DistrictWHReq) ProtoMessage()    {}
func (*DistrictWHReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{26}
}
func (m *DistrictWHReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistrictWHReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistrictWHReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DistrictWHReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictWHReq.Merge(dst, src)
}
func (m *DistrictWHReq) XXX_Size() int {
	return m.Size()
}
func (m *DistrictWHReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictWHReq.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictWHReq proto.InternalMessageInfo

func (m *DistrictWHReq) GetRegionId() int32 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

type DistrictWardReq struct {
	DistrictId           int32    `protobuf:"varint,1,opt,name=district_id,json=districtId,proto3" json:"district_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistrictWardReq) Reset()         { *m = DistrictWardReq{} }
func (m *DistrictWardReq) String() string { return proto.CompactTextString(m) }
func (*DistrictWardReq) ProtoMessage()    {}
func (*DistrictWardReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{27}
}
func (m *DistrictWardReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DistrictWardReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DistrictWardReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DistrictWardReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistrictWardReq.Merge(dst, src)
}
func (m *DistrictWardReq) XXX_Size() int {
	return m.Size()
}
func (m *DistrictWardReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DistrictWardReq.DiscardUnknown(m)
}

var xxx_messageInfo_DistrictWardReq proto.InternalMessageInfo

func (m *DistrictWardReq) GetDistrictId() int32 {
	if m != nil {
		return m.DistrictId
	}
	return 0
}

type ShopInfoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopInfoReq) Reset()         { *m = ShopInfoReq{} }
func (m *ShopInfoReq) String() string { return proto.CompactTextString(m) }
func (*ShopInfoReq) ProtoMessage()    {}
func (*ShopInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{28}
}
func (m *ShopInfoReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopInfoReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ShopInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopInfoReq.Merge(dst, src)
}
func (m *ShopInfoReq) XXX_Size() int {
	return m.Size()
}
func (m *ShopInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShopInfoReq proto.InternalMessageInfo

type ChangeEmailReq struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Otp                  string   `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeEmailReq) Reset()         { *m = ChangeEmailReq{} }
func (m *ChangeEmailReq) String() string { return proto.CompactTextString(m) }
func (*ChangeEmailReq) ProtoMessage()    {}
func (*ChangeEmailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{29}
}
func (m *ChangeEmailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ChangeEmailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ChangeEmailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ChangeEmailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeEmailReq.Merge(dst, src)
}
func (m *ChangeEmailReq) XXX_Size() int {
	return m.Size()
}
func (m *ChangeEmailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeEmailReq.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeEmailReq proto.InternalMessageInfo

func (m *ChangeEmailReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ChangeEmailReq) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

type PhoneShopReq struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Otp                  string   `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhoneShopReq) Reset()         { *m = PhoneShopReq{} }
func (m *PhoneShopReq) String() string { return proto.CompactTextString(m) }
func (*PhoneShopReq) ProtoMessage()    {}
func (*PhoneShopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{30}
}
func (m *PhoneShopReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneShopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneShopReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *PhoneShopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneShopReq.Merge(dst, src)
}
func (m *PhoneShopReq) XXX_Size() int {
	return m.Size()
}
func (m *PhoneShopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneShopReq.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneShopReq proto.InternalMessageInfo

func (m *PhoneShopReq) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PhoneShopReq) GetOtp() string {
	if m != nil {
		return m.Otp
	}
	return ""
}

type UpdateShopDetailReq struct {
	ShopLogo             string   `protobuf:"bytes,1,opt,name=shop_logo,json=shopLogo,proto3" json:"shop_logo,omitempty"`
	ShopCover            string   `protobuf:"bytes,2,opt,name=shop_cover,json=shopCover,proto3" json:"shop_cover,omitempty"`
	ShopBackground       string   `protobuf:"bytes,3,opt,name=shop_background,json=shopBackground,proto3" json:"shop_background,omitempty"`
	ShopDescription      string   `protobuf:"bytes,4,opt,name=shop_description,json=shopDescription,proto3" json:"shop_description,omitempty"`
	Slogan               string   `protobuf:"bytes,5,opt,name=slogan,proto3" json:"slogan,omitempty"`
	ShopAddress          string   `protobuf:"bytes,6,opt,name=shop_address,json=shopAddress,proto3" json:"shop_address,omitempty"`
	ShopRegionId         uint32   `protobuf:"varint,7,opt,name=shop_region_id,json=shopRegionId,proto3" json:"shop_region_id,omitempty"`
	ShopDistrictId       uint32   `protobuf:"varint,8,opt,name=shop_district_id,json=shopDistrictId,proto3" json:"shop_district_id,omitempty"`
	ShopWardId           uint32   `protobuf:"varint,9,opt,name=shop_ward_id,json=shopWardId,proto3" json:"shop_ward_id,omitempty"`
	WarrantyInformation  string   `protobuf:"bytes,10,opt,name=warranty_information,json=warrantyInformation,proto3" json:"warranty_information,omitempty"`
	ShopRepresentative   string   `protobuf:"bytes,11,opt,name=shop_representative,json=shopRepresentative,proto3" json:"shop_representative,omitempty"`
	TaxNumber            string   `protobuf:"bytes,12,opt,name=tax_number,json=taxNumber,proto3" json:"tax_number,omitempty"`
	VersionNo            int64    `protobuf:"varint,13,opt,name=version_no,json=versionNo,proto3" json:"version_no,omitempty"`
	WarehouseAddress     string   `protobuf:"bytes,14,opt,name=warehouse_address,json=warehouseAddress,proto3" json:"warehouse_address,omitempty"`
	WarehouseRegionId    uint32   `protobuf:"varint,15,opt,name=warehouse_region_id,json=warehouseRegionId,proto3" json:"warehouse_region_id,omitempty"`
	WarehouseDistrictId  uint32   `protobuf:"varint,16,opt,name=warehouse_district_id,json=warehouseDistrictId,proto3" json:"warehouse_district_id,omitempty"`
	WarehouseWardId      uint32   `protobuf:"varint,17,opt,name=warehouse_ward_id,json=warehouseWardId,proto3" json:"warehouse_ward_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateShopDetailReq) Reset()         { *m = UpdateShopDetailReq{} }
func (m *UpdateShopDetailReq) String() string { return proto.CompactTextString(m) }
func (*UpdateShopDetailReq) ProtoMessage()    {}
func (*UpdateShopDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{31}
}
func (m *UpdateShopDetailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateShopDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateShopDetailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UpdateShopDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateShopDetailReq.Merge(dst, src)
}
func (m *UpdateShopDetailReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdateShopDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateShopDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateShopDetailReq proto.InternalMessageInfo

func (m *UpdateShopDetailReq) GetShopLogo() string {
	if m != nil {
		return m.ShopLogo
	}
	return ""
}

func (m *UpdateShopDetailReq) GetShopCover() string {
	if m != nil {
		return m.ShopCover
	}
	return ""
}

func (m *UpdateShopDetailReq) GetShopBackground() string {
	if m != nil {
		return m.ShopBackground
	}
	return ""
}

func (m *UpdateShopDetailReq) GetShopDescription() string {
	if m != nil {
		return m.ShopDescription
	}
	return ""
}

func (m *UpdateShopDetailReq) GetSlogan() string {
	if m != nil {
		return m.Slogan
	}
	return ""
}

func (m *UpdateShopDetailReq) GetShopAddress() string {
	if m != nil {
		return m.ShopAddress
	}
	return ""
}

func (m *UpdateShopDetailReq) GetShopRegionId() uint32 {
	if m != nil {
		return m.ShopRegionId
	}
	return 0
}

func (m *UpdateShopDetailReq) GetShopDistrictId() uint32 {
	if m != nil {
		return m.ShopDistrictId
	}
	return 0
}

func (m *UpdateShopDetailReq) GetShopWardId() uint32 {
	if m != nil {
		return m.ShopWardId
	}
	return 0
}

func (m *UpdateShopDetailReq) GetWarrantyInformation() string {
	if m != nil {
		return m.WarrantyInformation
	}
	return ""
}

func (m *UpdateShopDetailReq) GetShopRepresentative() string {
	if m != nil {
		return m.ShopRepresentative
	}
	return ""
}

func (m *UpdateShopDetailReq) GetTaxNumber() string {
	if m != nil {
		return m.TaxNumber
	}
	return ""
}

func (m *UpdateShopDetailReq) GetVersionNo() int64 {
	if m != nil {
		return m.VersionNo
	}
	return 0
}

func (m *UpdateShopDetailReq) GetWarehouseAddress() string {
	if m != nil {
		return m.WarehouseAddress
	}
	return ""
}

func (m *UpdateShopDetailReq) GetWarehouseRegionId() uint32 {
	if m != nil {
		return m.WarehouseRegionId
	}
	return 0
}

func (m *UpdateShopDetailReq) GetWarehouseDistrictId() uint32 {
	if m != nil {
		return m.WarehouseDistrictId
	}
	return 0
}

func (m *UpdateShopDetailReq) GetWarehouseWardId() uint32 {
	if m != nil {
		return m.WarehouseWardId
	}
	return 0
}

type ShopDtoRes struct {
	Data                 *ShopDto `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	HasError             bool     `protobuf:"varint,2,opt,name=has_error,json=hasError,proto3" json:"has_error,omitempty"`
	ErrorsMess           string   `protobuf:"bytes,3,opt,name=errors_mess,json=errorsMess,proto3" json:"errors_mess,omitempty"`
	ErrorCode            int32    `protobuf:"varint,4,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopDtoRes) Reset()         { *m = ShopDtoRes{} }
func (m *ShopDtoRes) String() string { return proto.CompactTextString(m) }
func (*ShopDtoRes) ProtoMessage()    {}
func (*ShopDtoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{32}
}
func (m *ShopDtoRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopDtoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopDtoRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ShopDtoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopDtoRes.Merge(dst, src)
}
func (m *ShopDtoRes) XXX_Size() int {
	return m.Size()
}
func (m *ShopDtoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopDtoRes.DiscardUnknown(m)
}

var xxx_messageInfo_ShopDtoRes proto.InternalMessageInfo

func (m *ShopDtoRes) GetData() *ShopDto {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ShopDtoRes) GetHasError() bool {
	if m != nil {
		return m.HasError
	}
	return false
}

func (m *ShopDtoRes) GetErrorsMess() string {
	if m != nil {
		return m.ErrorsMess
	}
	return ""
}

func (m *ShopDtoRes) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

type ShopDto struct {
	Id                    int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                  string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone                 string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	IsSelfShipping        bool     `protobuf:"varint,4,opt,name=is_self_shipping,json=isSelfShipping,proto3" json:"is_self_shipping,omitempty"`
	Code                  string   `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	ShopStatus            int32    `protobuf:"varint,6,opt,name=shop_status,json=shopStatus,proto3" json:"shop_status,omitempty"`
	ShopType              int32    `protobuf:"varint,7,opt,name=shop_type,json=shopType,proto3" json:"shop_type,omitempty"`
	StatusDate            int64    `protobuf:"varint,8,opt,name=status_date,json=statusDate,proto3" json:"status_date,omitempty"`
	SystemUrl             string   `protobuf:"bytes,9,opt,name=system_url,json=systemUrl,proto3" json:"system_url,omitempty"`
	ShippingMethod        int32    `protobuf:"varint,10,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method,omitempty"`
	PaymentMethod         int32    `protobuf:"varint,11,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Email                 string   `protobuf:"bytes,12,opt,name=email,proto3" json:"email,omitempty"`
	BusinessLicenseNumber string   `protobuf:"bytes,13,opt,name=business_license_number,json=businessLicenseNumber,proto3" json:"business_license_number,omitempty"`
	ShopAddress           string   `protobuf:"bytes,14,opt,name=shop_address,json=shopAddress,proto3" json:"shop_address,omitempty"`
	ShopWard              string   `protobuf:"bytes,15,opt,name=shop_ward,json=shopWard,proto3" json:"shop_ward,omitempty"`
	Mobile                string   `protobuf:"bytes,16,opt,name=mobile,proto3" json:"mobile,omitempty"`
	LastLogin             int64    `protobuf:"varint,17,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	Slogan                string   `protobuf:"bytes,18,opt,name=slogan,proto3" json:"slogan,omitempty"`
	ShopDescription       string   `protobuf:"bytes,19,opt,name=shop_description,json=shopDescription,proto3" json:"shop_description,omitempty"`
	ShopRepresentative    string   `protobuf:"bytes,20,opt,name=shop_representative,json=shopRepresentative,proto3" json:"shop_representative,omitempty"`
	ShopCountryCode       string   `protobuf:"bytes,21,opt,name=shop_country_code,json=shopCountryCode,proto3" json:"shop_country_code,omitempty"`
	WarehouseCountryCode  string   `protobuf:"bytes,22,opt,name=warehouse_country_code,json=warehouseCountryCode,proto3" json:"warehouse_country_code,omitempty"`
	TaxNumber             string   `protobuf:"bytes,23,opt,name=tax_number,json=taxNumber,proto3" json:"tax_number,omitempty"`
	ReasonCode            string   `protobuf:"bytes,24,opt,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	ShopRegionId          int32    `protobuf:"varint,25,opt,name=shop_region_id,json=shopRegionId,proto3" json:"shop_region_id,omitempty"`
	ShopDistrictId        int32    `protobuf:"varint,26,opt,name=shop_district_id,json=shopDistrictId,proto3" json:"shop_district_id,omitempty"`
	WarehouseDistrictId   int32    `protobuf:"varint,27,opt,name=warehouse_district_id,json=warehouseDistrictId,proto3" json:"warehouse_district_id,omitempty"`
	WarehouseRegionId     int32    `protobuf:"varint,28,opt,name=warehouse_region_id,json=warehouseRegionId,proto3" json:"warehouse_region_id,omitempty"`
	ShopWardId            int32    `protobuf:"varint,29,opt,name=shop_ward_id,json=shopWardId,proto3" json:"shop_ward_id,omitempty"`
	WarehouseWardId       int32    `protobuf:"varint,30,opt,name=warehouse_ward_id,json=warehouseWardId,proto3" json:"warehouse_ward_id,omitempty"`
	WarehouseAddress      string   `protobuf:"bytes,31,opt,name=warehouse_address,json=warehouseAddress,proto3" json:"warehouse_address,omitempty"`
	WarehouseWard         string   `protobuf:"bytes,32,opt,name=warehouse_ward,json=warehouseWard,proto3" json:"warehouse_ward,omitempty"`
	ClosingShopDate       int64    `protobuf:"varint,33,opt,name=closing_shop_date,json=closingShopDate,proto3" json:"closing_shop_date,omitempty"`
	CompanyName           string   `protobuf:"bytes,34,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ExternalLinkShop      string   `protobuf:"bytes,35,opt,name=external_link_shop,json=externalLinkShop,proto3" json:"external_link_shop,omitempty"`
	VersionNo             int64    `protobuf:"varint,36,opt,name=version_no,json=versionNo,proto3" json:"version_no,omitempty"`
	ShopBackground        string   `protobuf:"bytes,37,opt,name=shop_background,json=shopBackground,proto3" json:"shop_background,omitempty"`
	ShopCover             string   `protobuf:"bytes,38,opt,name=shop_cover,json=shopCover,proto3" json:"shop_cover,omitempty"`
	ShopLogo              string   `protobuf:"bytes,39,opt,name=shop_logo,json=shopLogo,proto3" json:"shop_logo,omitempty"`
	WarrantyInformation   string   `protobuf:"bytes,40,opt,name=warranty_information,json=warrantyInformation,proto3" json:"warranty_information,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ShopDto) Reset()         { *m = ShopDto{} }
func (m *ShopDto) String() string { return proto.CompactTextString(m) }
func (*ShopDto) ProtoMessage()    {}
func (*ShopDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{33}
}
func (m *ShopDto) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopDto.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ShopDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopDto.Merge(dst, src)
}
func (m *ShopDto) XXX_Size() int {
	return m.Size()
}
func (m *ShopDto) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopDto.DiscardUnknown(m)
}

var xxx_messageInfo_ShopDto proto.InternalMessageInfo

func (m *ShopDto) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ShopDto) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShopDto) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ShopDto) GetIsSelfShipping() bool {
	if m != nil {
		return m.IsSelfShipping
	}
	return false
}

func (m *ShopDto) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ShopDto) GetShopStatus() int32 {
	if m != nil {
		return m.ShopStatus
	}
	return 0
}

func (m *ShopDto) GetShopType() int32 {
	if m != nil {
		return m.ShopType
	}
	return 0
}

func (m *ShopDto) GetStatusDate() int64 {
	if m != nil {
		return m.StatusDate
	}
	return 0
}

func (m *ShopDto) GetSystemUrl() string {
	if m != nil {
		return m.SystemUrl
	}
	return ""
}

func (m *ShopDto) GetShippingMethod() int32 {
	if m != nil {
		return m.ShippingMethod
	}
	return 0
}

func (m *ShopDto) GetPaymentMethod() int32 {
	if m != nil {
		return m.PaymentMethod
	}
	return 0
}

func (m *ShopDto) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ShopDto) GetBusinessLicenseNumber() string {
	if m != nil {
		return m.BusinessLicenseNumber
	}
	return ""
}

func (m *ShopDto) GetShopAddress() string {
	if m != nil {
		return m.ShopAddress
	}
	return ""
}

func (m *ShopDto) GetShopWard() string {
	if m != nil {
		return m.ShopWard
	}
	return ""
}

func (m *ShopDto) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ShopDto) GetLastLogin() int64 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *ShopDto) GetSlogan() string {
	if m != nil {
		return m.Slogan
	}
	return ""
}

func (m *ShopDto) GetShopDescription() string {
	if m != nil {
		return m.ShopDescription
	}
	return ""
}

func (m *ShopDto) GetShopRepresentative() string {
	if m != nil {
		return m.ShopRepresentative
	}
	return ""
}

func (m *ShopDto) GetShopCountryCode() string {
	if m != nil {
		return m.ShopCountryCode
	}
	return ""
}

func (m *ShopDto) GetWarehouseCountryCode() string {
	if m != nil {
		return m.WarehouseCountryCode
	}
	return ""
}

func (m *ShopDto) GetTaxNumber() string {
	if m != nil {
		return m.TaxNumber
	}
	return ""
}

func (m *ShopDto) GetReasonCode() string {
	if m != nil {
		return m.ReasonCode
	}
	return ""
}

func (m *ShopDto) GetShopRegionId() int32 {
	if m != nil {
		return m.ShopRegionId
	}
	return 0
}

func (m *ShopDto) GetShopDistrictId() int32 {
	if m != nil {
		return m.ShopDistrictId
	}
	return 0
}

func (m *ShopDto) GetWarehouseDistrictId() int32 {
	if m != nil {
		return m.WarehouseDistrictId
	}
	return 0
}

func (m *ShopDto) GetWarehouseRegionId() int32 {
	if m != nil {
		return m.WarehouseRegionId
	}
	return 0
}

func (m *ShopDto) GetShopWardId() int32 {
	if m != nil {
		return m.ShopWardId
	}
	return 0
}

func (m *ShopDto) GetWarehouseWardId() int32 {
	if m != nil {
		return m.WarehouseWardId
	}
	return 0
}

func (m *ShopDto) GetWarehouseAddress() string {
	if m != nil {
		return m.WarehouseAddress
	}
	return ""
}

func (m *ShopDto) GetWarehouseWard() string {
	if m != nil {
		return m.WarehouseWard
	}
	return ""
}

func (m *ShopDto) GetClosingShopDate() int64 {
	if m != nil {
		return m.ClosingShopDate
	}
	return 0
}

func (m *ShopDto) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *ShopDto) GetExternalLinkShop() string {
	if m != nil {
		return m.ExternalLinkShop
	}
	return ""
}

func (m *ShopDto) GetVersionNo() int64 {
	if m != nil {
		return m.VersionNo
	}
	return 0
}

func (m *ShopDto) GetShopBackground() string {
	if m != nil {
		return m.ShopBackground
	}
	return ""
}

func (m *ShopDto) GetShopCover() string {
	if m != nil {
		return m.ShopCover
	}
	return ""
}

func (m *ShopDto) GetShopLogo() string {
	if m != nil {
		return m.ShopLogo
	}
	return ""
}

func (m *ShopDto) GetWarrantyInformation() string {
	if m != nil {
		return m.WarrantyInformation
	}
	return ""
}

type ShopDetailReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShopDetailReq) Reset()         { *m = ShopDetailReq{} }
func (m *ShopDetailReq) String() string { return proto.CompactTextString(m) }
func (*ShopDetailReq) ProtoMessage()    {}
func (*ShopDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_store_bad8e53c75d2a690, []int{34}
}
func (m *ShopDetailReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ShopDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ShopDetailReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ShopDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopDetailReq.Merge(dst, src)
}
func (m *ShopDetailReq) XXX_Size() int {
	return m.Size()
}
func (m *ShopDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_ShopDetailReq proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AlowCheckOrderRes)(nil), "sendo.v1.api.seller.store.AlowCheckOrderRes")
	proto.RegisterType((*MenuRep)(nil), "sendo.v1.api.seller.store.MenuRep")
	proto.RegisterType((*MenuRes)(nil), "sendo.v1.api.seller.store.MenuRes")
	proto.RegisterType((*SendoMenu)(nil), "sendo.v1.api.seller.store.SendoMenu")
	proto.RegisterType((*RegShopStep2Req)(nil), "sendo.v1.api.seller.store.RegShopStep2Req")
	proto.RegisterType((*RegShopStep3Req)(nil), "sendo.v1.api.seller.store.RegShopStep3Req")
	proto.RegisterType((*RegShopStep4Req)(nil), "sendo.v1.api.seller.store.RegShopStep4Req")
	proto.RegisterType((*RegShopStep5Req)(nil), "sendo.v1.api.seller.store.RegShopStep5Req")
	proto.RegisterType((*RegShopStep6Req)(nil), "sendo.v1.api.seller.store.RegShopStep6Req")
	proto.RegisterType((*RegShopStep7Req)(nil), "sendo.v1.api.seller.store.RegShopStep7Req")
	proto.RegisterType((*FileUploadDto)(nil), "sendo.v1.api.seller.store.FileUploadDto")
	proto.RegisterType((*UserContextDtoRes)(nil), "sendo.v1.api.seller.store.UserContextDtoRes")
	proto.RegisterType((*UserContextDto)(nil), "sendo.v1.api.seller.store.UserContextDto")
	proto.RegisterType((*CheckExistsUsershopWithoutAuthenReq)(nil), "sendo.v1.api.seller.store.CheckExistsUsershopWithoutAuthenReq")
	proto.RegisterType((*CheckExistsUsershopWithoutAuthenRes)(nil), "sendo.v1.api.seller.store.CheckExistsUsershopWithoutAuthenRes")
	proto.RegisterType((*CheckRegisterAndSendOtpRes)(nil), "sendo.v1.api.seller.store.CheckRegisterAndSendOtpRes")
	proto.RegisterType((*ApiRes)(nil), "sendo.v1.api.seller.store.ApiRes")
	proto.RegisterType((*RegionRes)(nil), "sendo.v1.api.seller.store.RegionRes")
	proto.RegisterType((*Region)(nil), "sendo.v1.api.seller.store.Region")
	proto.RegisterType((*DistrictRes)(nil), "sendo.v1.api.seller.store.DistrictRes")
	proto.RegisterType((*District)(nil), "sendo.v1.api.seller.store.District")
	proto.RegisterType((*DistrictWardRes)(nil), "sendo.v1.api.seller.store.DistrictWardRes")
	proto.RegisterType((*DistrictWard)(nil), "sendo.v1.api.seller.store.DistrictWard")
	proto.RegisterType((*RegionReq)(nil), "sendo.v1.api.seller.store.RegionReq")
	proto.RegisterType((*RegionWHReq)(nil), "sendo.v1.api.seller.store.RegionWHReq")
	proto.RegisterType((*DistrictReq)(nil), "sendo.v1.api.seller.store.DistrictReq")
	proto.RegisterType((*DistrictWHReq)(nil), "sendo.v1.api.seller.store.DistrictWHReq")
	proto.RegisterType((*DistrictWardReq)(nil), "sendo.v1.api.seller.store.DistrictWardReq")
	proto.RegisterType((*ShopInfoReq)(nil), "sendo.v1.api.seller.store.ShopInfoReq")
	proto.RegisterType((*ChangeEmailReq)(nil), "sendo.v1.api.seller.store.ChangeEmailReq")
	proto.RegisterType((*PhoneShopReq)(nil), "sendo.v1.api.seller.store.PhoneShopReq")
	proto.RegisterType((*UpdateShopDetailReq)(nil), "sendo.v1.api.seller.store.UpdateShopDetailReq")
	proto.RegisterType((*ShopDtoRes)(nil), "sendo.v1.api.seller.store.shopDtoRes")
	proto.RegisterType((*ShopDto)(nil), "sendo.v1.api.seller.store.shopDto")
	proto.RegisterType((*ShopDetailReq)(nil), "sendo.v1.api.seller.store.ShopDetailReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoreServiceClient is the client API for StoreService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoreServiceClient interface {
	// register shop
	// CheckExistsUsershopWithoutAuthen
	CheckExistsUsershopWithoutAuthen(ctx context.Context, in *CheckExistsUsershopWithoutAuthenReq, opts ...grpc.CallOption) (*CheckExistsUsershopWithoutAuthenRes, error)
	// CheckRegisterAndSendOtp
	// rpc CheckRegisterAndSendOtp (CheckRegisterAndSendOtpReg) returns (CheckRegisterAndSendOtpRes) {}
	RegShopStep2(ctx context.Context, in *RegShopStep2Req, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	RegShopStep3(ctx context.Context, in *RegShopStep3Req, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	RegShopStep4(ctx context.Context, in *RegShopStep4Req, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	RegShopStep5(ctx context.Context, in *RegShopStep5Req, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	RegShopStep6(ctx context.Context, in *RegShopStep6Req, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	RegShopStep7(ctx context.Context, in *RegShopStep7Req, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	GetRegions(ctx context.Context, in *RegionReq, opts ...grpc.CallOption) (*RegionRes, error)
	GetRegionWHs(ctx context.Context, in *RegionWHReq, opts ...grpc.CallOption) (*RegionRes, error)
	GetDistricts(ctx context.Context, in *DistrictReq, opts ...grpc.CallOption) (*DistrictRes, error)
	GetDistrictWHs(ctx context.Context, in *DistrictWHReq, opts ...grpc.CallOption) (*DistrictRes, error)
	GetDistrictWards(ctx context.Context, in *DistrictWardReq, opts ...grpc.CallOption) (*DistrictWardRes, error)
	GetShopInfo(ctx context.Context, in *ShopInfoReq, opts ...grpc.CallOption) (*UserContextDtoRes, error)
	ReqChangeEmail(ctx context.Context, in *ChangeEmailReq, opts ...grpc.CallOption) (*ApiRes, error)
	UpdateEmailShop(ctx context.Context, in *ChangeEmailReq, opts ...grpc.CallOption) (*ApiRes, error)
	ReqChangePhone(ctx context.Context, in *PhoneShopReq, opts ...grpc.CallOption) (*ApiRes, error)
	UpdatePhoneShop(ctx context.Context, in *PhoneShopReq, opts ...grpc.CallOption) (*ApiRes, error)
	GetShopDetail(ctx context.Context, in *ShopDetailReq, opts ...grpc.CallOption) (*ShopDtoRes, error)
	UpdateShopDetail(ctx context.Context, in *UpdateShopDetailReq, opts ...grpc.CallOption) (*ShopDtoRes, error)
	GetMenu(ctx context.Context, in *MenuRes, opts ...grpc.CallOption) (*MenuRep, error)
	UpdateAlowCheckOrder(ctx context.Context, in *AlowCheckOrderRes, opts ...grpc.CallOption) (*ApiRes, error)
}

type storeServiceClient struct {
	cc *grpc.ClientConn
}

func NewStoreServiceClient(cc *grpc.ClientConn) StoreServiceClient {
	return &storeServiceClient{cc}
}

func (c *storeServiceClient) CheckExistsUsershopWithoutAuthen(ctx context.Context, in *CheckExistsUsershopWithoutAuthenReq, opts ...grpc.CallOption) (*CheckExistsUsershopWithoutAuthenRes, error) {
	out := new(CheckExistsUsershopWithoutAuthenRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/CheckExistsUsershopWithoutAuthen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) RegShopStep2(ctx context.Context, in *RegShopStep2Req, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/RegShopStep2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) RegShopStep3(ctx context.Context, in *RegShopStep3Req, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/RegShopStep3", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) RegShopStep4(ctx context.Context, in *RegShopStep4Req, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/RegShopStep4", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) RegShopStep5(ctx context.Context, in *RegShopStep5Req, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/RegShopStep5", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) RegShopStep6(ctx context.Context, in *RegShopStep6Req, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/RegShopStep6", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) RegShopStep7(ctx context.Context, in *RegShopStep7Req, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/RegShopStep7", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetRegions(ctx context.Context, in *RegionReq, opts ...grpc.CallOption) (*RegionRes, error) {
	out := new(RegionRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetRegions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetRegionWHs(ctx context.Context, in *RegionWHReq, opts ...grpc.CallOption) (*RegionRes, error) {
	out := new(RegionRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetRegionWHs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetDistricts(ctx context.Context, in *DistrictReq, opts ...grpc.CallOption) (*DistrictRes, error) {
	out := new(DistrictRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetDistricts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetDistrictWHs(ctx context.Context, in *DistrictWHReq, opts ...grpc.CallOption) (*DistrictRes, error) {
	out := new(DistrictRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetDistrictWHs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetDistrictWards(ctx context.Context, in *DistrictWardReq, opts ...grpc.CallOption) (*DistrictWardRes, error) {
	out := new(DistrictWardRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetDistrictWards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetShopInfo(ctx context.Context, in *ShopInfoReq, opts ...grpc.CallOption) (*UserContextDtoRes, error) {
	out := new(UserContextDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetShopInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) ReqChangeEmail(ctx context.Context, in *ChangeEmailReq, opts ...grpc.CallOption) (*ApiRes, error) {
	out := new(ApiRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/ReqChangeEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) UpdateEmailShop(ctx context.Context, in *ChangeEmailReq, opts ...grpc.CallOption) (*ApiRes, error) {
	out := new(ApiRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/UpdateEmailShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) ReqChangePhone(ctx context.Context, in *PhoneShopReq, opts ...grpc.CallOption) (*ApiRes, error) {
	out := new(ApiRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/ReqChangePhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) UpdatePhoneShop(ctx context.Context, in *PhoneShopReq, opts ...grpc.CallOption) (*ApiRes, error) {
	out := new(ApiRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/UpdatePhoneShop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetShopDetail(ctx context.Context, in *ShopDetailReq, opts ...grpc.CallOption) (*ShopDtoRes, error) {
	out := new(ShopDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetShopDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) UpdateShopDetail(ctx context.Context, in *UpdateShopDetailReq, opts ...grpc.CallOption) (*ShopDtoRes, error) {
	out := new(ShopDtoRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/UpdateShopDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) GetMenu(ctx context.Context, in *MenuRes, opts ...grpc.CallOption) (*MenuRep, error) {
	out := new(MenuRep)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/GetMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeServiceClient) UpdateAlowCheckOrder(ctx context.Context, in *AlowCheckOrderRes, opts ...grpc.CallOption) (*ApiRes, error) {
	out := new(ApiRes)
	err := c.cc.Invoke(ctx, "/sendo.v1.api.seller.store.StoreService/UpdateAlowCheckOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoreServiceServer is the server API for StoreService service.
type StoreServiceServer interface {
	// register shop
	// CheckExistsUsershopWithoutAuthen
	CheckExistsUsershopWithoutAuthen(context.Context, *CheckExistsUsershopWithoutAuthenReq) (*CheckExistsUsershopWithoutAuthenRes, error)
	// CheckRegisterAndSendOtp
	// rpc CheckRegisterAndSendOtp (CheckRegisterAndSendOtpReg) returns (CheckRegisterAndSendOtpRes) {}
	RegShopStep2(context.Context, *RegShopStep2Req) (*UserContextDtoRes, error)
	RegShopStep3(context.Context, *RegShopStep3Req) (*UserContextDtoRes, error)
	RegShopStep4(context.Context, *RegShopStep4Req) (*UserContextDtoRes, error)
	RegShopStep5(context.Context, *RegShopStep5Req) (*UserContextDtoRes, error)
	RegShopStep6(context.Context, *RegShopStep6Req) (*UserContextDtoRes, error)
	RegShopStep7(context.Context, *RegShopStep7Req) (*UserContextDtoRes, error)
	GetRegions(context.Context, *RegionReq) (*RegionRes, error)
	GetRegionWHs(context.Context, *RegionWHReq) (*RegionRes, error)
	GetDistricts(context.Context, *DistrictReq) (*DistrictRes, error)
	GetDistrictWHs(context.Context, *DistrictWHReq) (*DistrictRes, error)
	GetDistrictWards(context.Context, *DistrictWardReq) (*DistrictWardRes, error)
	GetShopInfo(context.Context, *ShopInfoReq) (*UserContextDtoRes, error)
	ReqChangeEmail(context.Context, *ChangeEmailReq) (*ApiRes, error)
	UpdateEmailShop(context.Context, *ChangeEmailReq) (*ApiRes, error)
	ReqChangePhone(context.Context, *PhoneShopReq) (*ApiRes, error)
	UpdatePhoneShop(context.Context, *PhoneShopReq) (*ApiRes, error)
	GetShopDetail(context.Context, *ShopDetailReq) (*ShopDtoRes, error)
	UpdateShopDetail(context.Context, *UpdateShopDetailReq) (*ShopDtoRes, error)
	GetMenu(context.Context, *MenuRes) (*MenuRep, error)
	UpdateAlowCheckOrder(context.Context, *AlowCheckOrderRes) (*ApiRes, error)
}

func RegisterStoreServiceServer(s *grpc.Server, srv StoreServiceServer) {
	s.RegisterService(&_StoreService_serviceDesc, srv)
}

func _StoreService_CheckExistsUsershopWithoutAuthen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckExistsUsershopWithoutAuthenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).CheckExistsUsershopWithoutAuthen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/CheckExistsUsershopWithoutAuthen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).CheckExistsUsershopWithoutAuthen(ctx, req.(*CheckExistsUsershopWithoutAuthenReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_RegShopStep2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegShopStep2Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).RegShopStep2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/RegShopStep2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).RegShopStep2(ctx, req.(*RegShopStep2Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_RegShopStep3_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegShopStep3Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).RegShopStep3(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/RegShopStep3",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).RegShopStep3(ctx, req.(*RegShopStep3Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_RegShopStep4_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegShopStep4Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).RegShopStep4(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/RegShopStep4",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).RegShopStep4(ctx, req.(*RegShopStep4Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_RegShopStep5_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegShopStep5Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).RegShopStep5(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/RegShopStep5",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).RegShopStep5(ctx, req.(*RegShopStep5Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_RegShopStep6_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegShopStep6Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).RegShopStep6(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/RegShopStep6",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).RegShopStep6(ctx, req.(*RegShopStep6Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_RegShopStep7_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegShopStep7Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).RegShopStep7(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/RegShopStep7",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).RegShopStep7(ctx, req.(*RegShopStep7Req))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetRegions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetRegions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetRegions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetRegions(ctx, req.(*RegionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetRegionWHs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegionWHReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetRegionWHs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetRegionWHs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetRegionWHs(ctx, req.(*RegionWHReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetDistricts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistrictReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetDistricts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetDistricts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetDistricts(ctx, req.(*DistrictReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetDistrictWHs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistrictWHReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetDistrictWHs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetDistrictWHs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetDistrictWHs(ctx, req.(*DistrictWHReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetDistrictWards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DistrictWardReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetDistrictWards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetDistrictWards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetDistrictWards(ctx, req.(*DistrictWardReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetShopInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetShopInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetShopInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetShopInfo(ctx, req.(*ShopInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_ReqChangeEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).ReqChangeEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/ReqChangeEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).ReqChangeEmail(ctx, req.(*ChangeEmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_UpdateEmailShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeEmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).UpdateEmailShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/UpdateEmailShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).UpdateEmailShop(ctx, req.(*ChangeEmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_ReqChangePhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneShopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).ReqChangePhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/ReqChangePhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).ReqChangePhone(ctx, req.(*PhoneShopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_UpdatePhoneShop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneShopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).UpdatePhoneShop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/UpdatePhoneShop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).UpdatePhoneShop(ctx, req.(*PhoneShopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetShopDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShopDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetShopDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetShopDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetShopDetail(ctx, req.(*ShopDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_UpdateShopDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShopDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).UpdateShopDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/UpdateShopDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).UpdateShopDetail(ctx, req.(*UpdateShopDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_GetMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MenuRes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).GetMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/GetMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).GetMenu(ctx, req.(*MenuRes))
	}
	return interceptor(ctx, in, info, handler)
}

func _StoreService_UpdateAlowCheckOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlowCheckOrderRes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServiceServer).UpdateAlowCheckOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sendo.v1.api.seller.store.StoreService/UpdateAlowCheckOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServiceServer).UpdateAlowCheckOrder(ctx, req.(*AlowCheckOrderRes))
	}
	return interceptor(ctx, in, info, handler)
}

var _StoreService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sendo.v1.api.seller.store.StoreService",
	HandlerType: (*StoreServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckExistsUsershopWithoutAuthen",
			Handler:    _StoreService_CheckExistsUsershopWithoutAuthen_Handler,
		},
		{
			MethodName: "RegShopStep2",
			Handler:    _StoreService_RegShopStep2_Handler,
		},
		{
			MethodName: "RegShopStep3",
			Handler:    _StoreService_RegShopStep3_Handler,
		},
		{
			MethodName: "RegShopStep4",
			Handler:    _StoreService_RegShopStep4_Handler,
		},
		{
			MethodName: "RegShopStep5",
			Handler:    _StoreService_RegShopStep5_Handler,
		},
		{
			MethodName: "RegShopStep6",
			Handler:    _StoreService_RegShopStep6_Handler,
		},
		{
			MethodName: "RegShopStep7",
			Handler:    _StoreService_RegShopStep7_Handler,
		},
		{
			MethodName: "GetRegions",
			Handler:    _StoreService_GetRegions_Handler,
		},
		{
			MethodName: "GetRegionWHs",
			Handler:    _StoreService_GetRegionWHs_Handler,
		},
		{
			MethodName: "GetDistricts",
			Handler:    _StoreService_GetDistricts_Handler,
		},
		{
			MethodName: "GetDistrictWHs",
			Handler:    _StoreService_GetDistrictWHs_Handler,
		},
		{
			MethodName: "GetDistrictWards",
			Handler:    _StoreService_GetDistrictWards_Handler,
		},
		{
			MethodName: "GetShopInfo",
			Handler:    _StoreService_GetShopInfo_Handler,
		},
		{
			MethodName: "ReqChangeEmail",
			Handler:    _StoreService_ReqChangeEmail_Handler,
		},
		{
			MethodName: "UpdateEmailShop",
			Handler:    _StoreService_UpdateEmailShop_Handler,
		},
		{
			MethodName: "ReqChangePhone",
			Handler:    _StoreService_ReqChangePhone_Handler,
		},
		{
			MethodName: "UpdatePhoneShop",
			Handler:    _StoreService_UpdatePhoneShop_Handler,
		},
		{
			MethodName: "GetShopDetail",
			Handler:    _StoreService_GetShopDetail_Handler,
		},
		{
			MethodName: "UpdateShopDetail",
			Handler:    _StoreService_UpdateShopDetail_Handler,
		},
		{
			MethodName: "GetMenu",
			Handler:    _StoreService_GetMenu_Handler,
		},
		{
			MethodName: "UpdateAlowCheckOrder",
			Handler:    _StoreService_UpdateAlowCheckOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "seller/store/store.proto",
}

func (m *AlowCheckOrderRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AlowCheckOrderRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Value {
		dAtA[i] = 0x8
		i++
		if m.Value {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MenuRep) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MenuRep) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0xa
			i++
			i = encodeVarintStore(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *MenuRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MenuRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.StoreId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.StoreId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *SendoMenu) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendoMenu) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.MenuName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.MenuName)))
		i += copy(dAtA[i:], m.MenuName)
	}
	if len(m.MenuCode) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.MenuCode)))
		i += copy(dAtA[i:], m.MenuCode)
	}
	if len(m.MenuStyle) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.MenuStyle)))
		i += copy(dAtA[i:], m.MenuStyle)
	}
	if len(m.MenuUrl) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.MenuUrl)))
		i += copy(dAtA[i:], m.MenuUrl)
	}
	if len(m.MenuUrlSpa) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.MenuUrlSpa)))
		i += copy(dAtA[i:], m.MenuUrlSpa)
	}
	if m.MenuID != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.MenuID))
	}
	if len(m.Menus) > 0 {
		for _, msg := range m.Menus {
			dAtA[i] = 0x3a
			i++
			i = encodeVarintStore(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegShopStep2Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegShopStep2Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ShopName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopName)))
		i += copy(dAtA[i:], m.ShopName)
	}
	if len(m.PhoneNumber) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.PhoneNumber)))
		i += copy(dAtA[i:], m.PhoneNumber)
	}
	if len(m.Otp) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Otp)))
		i += copy(dAtA[i:], m.Otp)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegShopStep3Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegShopStep3Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ShopAddress) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopAddress)))
		i += copy(dAtA[i:], m.ShopAddress)
	}
	if m.ShopWardId != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopWardId))
	}
	if m.ShopDistrictId != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopDistrictId))
	}
	if m.ShopRegionId != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopRegionId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegShopStep4Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegShopStep4Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.UserAgentString) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.UserAgentString)))
		i += copy(dAtA[i:], m.UserAgentString)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegShopStep5Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegShopStep5Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.ShopType != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopType))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegShopStep6Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegShopStep6Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ShopUrl) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopUrl)))
		i += copy(dAtA[i:], m.ShopUrl)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegShopStep7Req) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegShopStep7Req) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Code) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.ExternalLinkShop) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ExternalLinkShop)))
		i += copy(dAtA[i:], m.ExternalLinkShop)
	}
	if len(m.ShopRepresentative) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopRepresentative)))
		i += copy(dAtA[i:], m.ShopRepresentative)
	}
	if len(m.CompanyName) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.CompanyName)))
		i += copy(dAtA[i:], m.CompanyName)
	}
	if len(m.BusinessLicenseNumber) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.BusinessLicenseNumber)))
		i += copy(dAtA[i:], m.BusinessLicenseNumber)
	}
	if m.BusinessType != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.BusinessType))
	}
	if m.IsUseWarehouseAddress {
		dAtA[i] = 0x40
		i++
		if m.IsUseWarehouseAddress {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.Mobile) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Mobile)))
		i += copy(dAtA[i:], m.Mobile)
	}
	if len(m.ShopAddress) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopAddress)))
		i += copy(dAtA[i:], m.ShopAddress)
	}
	if m.ShopWardId != 0 {
		dAtA[i] = 0x60
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopWardId))
	}
	if m.ShopDistrictId != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopDistrictId))
	}
	if m.ShopRegionId != 0 {
		dAtA[i] = 0x70
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopRegionId))
	}
	if len(m.FileAttachment) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.FileAttachment)))
		i += copy(dAtA[i:], m.FileAttachment)
	}
	if len(m.FileAttachments) > 0 {
		for _, msg := range m.FileAttachments {
			dAtA[i] = 0x82
			i++
			dAtA[i] = 0x1
			i++
			i = encodeVarintStore(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if len(m.IdentificationNumber) > 0 {
		dAtA[i] = 0x8a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.IdentificationNumber)))
		i += copy(dAtA[i:], m.IdentificationNumber)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *FileUploadDto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FileUploadDto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.FileName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.FileName)))
		i += copy(dAtA[i:], m.FileName)
	}
	if len(m.UrlFile) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.UrlFile)))
		i += copy(dAtA[i:], m.UrlFile)
	}
	if m.Type != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Type))
	}
	if len(m.Filebyte) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Filebyte)))
		i += copy(dAtA[i:], m.Filebyte)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UserContextDtoRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserContextDtoRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Data.Size()))
		n1, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.HasError {
		dAtA[i] = 0x10
		i++
		if m.HasError {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ErrorsMess) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ErrorsMess)))
		i += copy(dAtA[i:], m.ErrorsMess)
	}
	if m.ErrorCode != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ErrorCode))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UserContextDto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserContextDto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ShopName) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopName)))
		i += copy(dAtA[i:], m.ShopName)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.FullName) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.FullName)))
		i += copy(dAtA[i:], m.FullName)
	}
	if len(m.AvatarUrl) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.AvatarUrl)))
		i += copy(dAtA[i:], m.AvatarUrl)
	}
	if m.ShopId != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopId))
	}
	if m.SentSms {
		dAtA[i] = 0x30
		i++
		if m.SentSms {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ShopStatus != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopStatus))
	}
	if len(m.ShopUrl) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopUrl)))
		i += copy(dAtA[i:], m.ShopUrl)
	}
	if m.IsReview {
		dAtA[i] = 0x48
		i++
		if m.IsReview {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IsFresh {
		dAtA[i] = 0x50
		i++
		if m.IsFresh {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Token) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Token)))
		i += copy(dAtA[i:], m.Token)
	}
	if len(m.Mobile) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Mobile)))
		i += copy(dAtA[i:], m.Mobile)
	}
	if m.ActivityPoint != 0 {
		dAtA[i] = 0x75
		i++
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(m.ActivityPoint))))
		i += 4
	}
	if m.ActivityPointStatus != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ActivityPointStatus))
	}
	if m.DepositAmount != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.DepositAmount))
	}
	if m.IsAffiliate {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		if m.IsAffiliate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IsBrandShop {
		dAtA[i] = 0x90
		i++
		dAtA[i] = 0x1
		i++
		if m.IsBrandShop {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.IsSelfShipping {
		dAtA[i] = 0x98
		i++
		dAtA[i] = 0x1
		i++
		if m.IsSelfShipping {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.ShopType != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopType))
	}
	if m.ShopLevel != 0 {
		dAtA[i] = 0xa8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopLevel))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CheckExistsUsershopWithoutAuthenReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckExistsUsershopWithoutAuthenReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CheckExistsUsershopWithoutAuthenRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckExistsUsershopWithoutAuthenRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Data))
	}
	if m.HasError {
		dAtA[i] = 0x10
		i++
		if m.HasError {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CheckRegisterAndSendOtpRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckRegisterAndSendOtpRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.HasError {
		dAtA[i] = 0x8
		i++
		if m.HasError {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ApiRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApiRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.HasError {
		dAtA[i] = 0x8
		i++
		if m.HasError {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Message) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Message)))
		i += copy(dAtA[i:], m.Message)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegionRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegionRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0xa
			i++
			i = encodeVarintStore(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *Region) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Region) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Id))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DistrictRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistrictRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0xa
			i++
			i = encodeVarintStore(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *District) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *District) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Id))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DistrictWardRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistrictWardRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0xa
			i++
			i = encodeVarintStore(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DistrictWard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistrictWard) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Id))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegionReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegionReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *RegionWHReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegionWHReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DistrictReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistrictReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RegionId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.RegionId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DistrictWHReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistrictWHReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.RegionId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.RegionId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *DistrictWardReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DistrictWardReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.DistrictId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.DistrictId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopInfoReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopInfoReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ChangeEmailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ChangeEmailReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Email) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Otp) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Otp)))
		i += copy(dAtA[i:], m.Otp)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *PhoneShopReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneShopReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Phone) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if len(m.Otp) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Otp)))
		i += copy(dAtA[i:], m.Otp)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *UpdateShopDetailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateShopDetailReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ShopLogo) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopLogo)))
		i += copy(dAtA[i:], m.ShopLogo)
	}
	if len(m.ShopCover) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopCover)))
		i += copy(dAtA[i:], m.ShopCover)
	}
	if len(m.ShopBackground) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopBackground)))
		i += copy(dAtA[i:], m.ShopBackground)
	}
	if len(m.ShopDescription) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopDescription)))
		i += copy(dAtA[i:], m.ShopDescription)
	}
	if len(m.Slogan) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Slogan)))
		i += copy(dAtA[i:], m.Slogan)
	}
	if len(m.ShopAddress) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopAddress)))
		i += copy(dAtA[i:], m.ShopAddress)
	}
	if m.ShopRegionId != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopRegionId))
	}
	if m.ShopDistrictId != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopDistrictId))
	}
	if m.ShopWardId != 0 {
		dAtA[i] = 0x48
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopWardId))
	}
	if len(m.WarrantyInformation) > 0 {
		dAtA[i] = 0x52
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.WarrantyInformation)))
		i += copy(dAtA[i:], m.WarrantyInformation)
	}
	if len(m.ShopRepresentative) > 0 {
		dAtA[i] = 0x5a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopRepresentative)))
		i += copy(dAtA[i:], m.ShopRepresentative)
	}
	if len(m.TaxNumber) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.TaxNumber)))
		i += copy(dAtA[i:], m.TaxNumber)
	}
	if m.VersionNo != 0 {
		dAtA[i] = 0x68
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.VersionNo))
	}
	if len(m.WarehouseAddress) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.WarehouseAddress)))
		i += copy(dAtA[i:], m.WarehouseAddress)
	}
	if m.WarehouseRegionId != 0 {
		dAtA[i] = 0x78
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.WarehouseRegionId))
	}
	if m.WarehouseDistrictId != 0 {
		dAtA[i] = 0x80
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.WarehouseDistrictId))
	}
	if m.WarehouseWardId != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.WarehouseWardId))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopDtoRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopDtoRes) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Data.Size()))
		n2, err := m.Data.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n2
	}
	if m.HasError {
		dAtA[i] = 0x10
		i++
		if m.HasError {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.ErrorsMess) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ErrorsMess)))
		i += copy(dAtA[i:], m.ErrorsMess)
	}
	if m.ErrorCode != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ErrorCode))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopDto) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopDto) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.Id))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Phone) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Phone)))
		i += copy(dAtA[i:], m.Phone)
	}
	if m.IsSelfShipping {
		dAtA[i] = 0x20
		i++
		if m.IsSelfShipping {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Code) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Code)))
		i += copy(dAtA[i:], m.Code)
	}
	if m.ShopStatus != 0 {
		dAtA[i] = 0x30
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopStatus))
	}
	if m.ShopType != 0 {
		dAtA[i] = 0x38
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopType))
	}
	if m.StatusDate != 0 {
		dAtA[i] = 0x40
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.StatusDate))
	}
	if len(m.SystemUrl) > 0 {
		dAtA[i] = 0x4a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.SystemUrl)))
		i += copy(dAtA[i:], m.SystemUrl)
	}
	if m.ShippingMethod != 0 {
		dAtA[i] = 0x50
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShippingMethod))
	}
	if m.PaymentMethod != 0 {
		dAtA[i] = 0x58
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.PaymentMethod))
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x62
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.BusinessLicenseNumber) > 0 {
		dAtA[i] = 0x6a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.BusinessLicenseNumber)))
		i += copy(dAtA[i:], m.BusinessLicenseNumber)
	}
	if len(m.ShopAddress) > 0 {
		dAtA[i] = 0x72
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopAddress)))
		i += copy(dAtA[i:], m.ShopAddress)
	}
	if len(m.ShopWard) > 0 {
		dAtA[i] = 0x7a
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopWard)))
		i += copy(dAtA[i:], m.ShopWard)
	}
	if len(m.Mobile) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Mobile)))
		i += copy(dAtA[i:], m.Mobile)
	}
	if m.LastLogin != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.LastLogin))
	}
	if len(m.Slogan) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.Slogan)))
		i += copy(dAtA[i:], m.Slogan)
	}
	if len(m.ShopDescription) > 0 {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopDescription)))
		i += copy(dAtA[i:], m.ShopDescription)
	}
	if len(m.ShopRepresentative) > 0 {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopRepresentative)))
		i += copy(dAtA[i:], m.ShopRepresentative)
	}
	if len(m.ShopCountryCode) > 0 {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopCountryCode)))
		i += copy(dAtA[i:], m.ShopCountryCode)
	}
	if len(m.WarehouseCountryCode) > 0 {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.WarehouseCountryCode)))
		i += copy(dAtA[i:], m.WarehouseCountryCode)
	}
	if len(m.TaxNumber) > 0 {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.TaxNumber)))
		i += copy(dAtA[i:], m.TaxNumber)
	}
	if len(m.ReasonCode) > 0 {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ReasonCode)))
		i += copy(dAtA[i:], m.ReasonCode)
	}
	if m.ShopRegionId != 0 {
		dAtA[i] = 0xc8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopRegionId))
	}
	if m.ShopDistrictId != 0 {
		dAtA[i] = 0xd0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopDistrictId))
	}
	if m.WarehouseDistrictId != 0 {
		dAtA[i] = 0xd8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.WarehouseDistrictId))
	}
	if m.WarehouseRegionId != 0 {
		dAtA[i] = 0xe0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.WarehouseRegionId))
	}
	if m.ShopWardId != 0 {
		dAtA[i] = 0xe8
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ShopWardId))
	}
	if m.WarehouseWardId != 0 {
		dAtA[i] = 0xf0
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.WarehouseWardId))
	}
	if len(m.WarehouseAddress) > 0 {
		dAtA[i] = 0xfa
		i++
		dAtA[i] = 0x1
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.WarehouseAddress)))
		i += copy(dAtA[i:], m.WarehouseAddress)
	}
	if len(m.WarehouseWard) > 0 {
		dAtA[i] = 0x82
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.WarehouseWard)))
		i += copy(dAtA[i:], m.WarehouseWard)
	}
	if m.ClosingShopDate != 0 {
		dAtA[i] = 0x88
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.ClosingShopDate))
	}
	if len(m.CompanyName) > 0 {
		dAtA[i] = 0x92
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.CompanyName)))
		i += copy(dAtA[i:], m.CompanyName)
	}
	if len(m.ExternalLinkShop) > 0 {
		dAtA[i] = 0x9a
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ExternalLinkShop)))
		i += copy(dAtA[i:], m.ExternalLinkShop)
	}
	if m.VersionNo != 0 {
		dAtA[i] = 0xa0
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(m.VersionNo))
	}
	if len(m.ShopBackground) > 0 {
		dAtA[i] = 0xaa
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopBackground)))
		i += copy(dAtA[i:], m.ShopBackground)
	}
	if len(m.ShopCover) > 0 {
		dAtA[i] = 0xb2
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopCover)))
		i += copy(dAtA[i:], m.ShopCover)
	}
	if len(m.ShopLogo) > 0 {
		dAtA[i] = 0xba
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.ShopLogo)))
		i += copy(dAtA[i:], m.ShopLogo)
	}
	if len(m.WarrantyInformation) > 0 {
		dAtA[i] = 0xc2
		i++
		dAtA[i] = 0x2
		i++
		i = encodeVarintStore(dAtA, i, uint64(len(m.WarrantyInformation)))
		i += copy(dAtA[i:], m.WarrantyInformation)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ShopDetailReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ShopDetailReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintStore(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AlowCheckOrderRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MenuRep) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MenuRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoreId != 0 {
		n += 1 + sovStore(uint64(m.StoreId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SendoMenu) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MenuName)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.MenuCode)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.MenuStyle)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.MenuUrl)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.MenuUrlSpa)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.MenuID != 0 {
		n += 1 + sovStore(uint64(m.MenuID))
	}
	if len(m.Menus) > 0 {
		for _, e := range m.Menus {
			l = e.Size()
			n += 1 + l + sovStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegShopStep2Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ShopName)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Otp)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegShopStep3Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ShopAddress)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ShopWardId != 0 {
		n += 1 + sovStore(uint64(m.ShopWardId))
	}
	if m.ShopDistrictId != 0 {
		n += 1 + sovStore(uint64(m.ShopDistrictId))
	}
	if m.ShopRegionId != 0 {
		n += 1 + sovStore(uint64(m.ShopRegionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegShopStep4Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.UserAgentString)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegShopStep5Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ShopType != 0 {
		n += 1 + sovStore(uint64(m.ShopType))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegShopStep6Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ShopUrl)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegShopStep7Req) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ExternalLinkShop)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopRepresentative)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.CompanyName)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.BusinessLicenseNumber)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.BusinessType != 0 {
		n += 1 + sovStore(uint64(m.BusinessType))
	}
	if m.IsUseWarehouseAddress {
		n += 2
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopAddress)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ShopWardId != 0 {
		n += 1 + sovStore(uint64(m.ShopWardId))
	}
	if m.ShopDistrictId != 0 {
		n += 1 + sovStore(uint64(m.ShopDistrictId))
	}
	if m.ShopRegionId != 0 {
		n += 1 + sovStore(uint64(m.ShopRegionId))
	}
	l = len(m.FileAttachment)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if len(m.FileAttachments) > 0 {
		for _, e := range m.FileAttachments {
			l = e.Size()
			n += 2 + l + sovStore(uint64(l))
		}
	}
	l = len(m.IdentificationNumber)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FileUploadDto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FileName)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.UrlFile)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.Type != 0 {
		n += 1 + sovStore(uint64(m.Type))
	}
	l = len(m.Filebyte)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserContextDtoRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovStore(uint64(l))
	}
	if m.HasError {
		n += 2
	}
	l = len(m.ErrorsMess)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ErrorCode != 0 {
		n += 1 + sovStore(uint64(m.ErrorCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserContextDto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ShopName)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.FullName)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.AvatarUrl)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ShopId != 0 {
		n += 1 + sovStore(uint64(m.ShopId))
	}
	if m.SentSms {
		n += 2
	}
	if m.ShopStatus != 0 {
		n += 1 + sovStore(uint64(m.ShopStatus))
	}
	l = len(m.ShopUrl)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.IsReview {
		n += 2
	}
	if m.IsFresh {
		n += 2
	}
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ActivityPoint != 0 {
		n += 5
	}
	if m.ActivityPointStatus != 0 {
		n += 1 + sovStore(uint64(m.ActivityPointStatus))
	}
	if m.DepositAmount != 0 {
		n += 2 + sovStore(uint64(m.DepositAmount))
	}
	if m.IsAffiliate {
		n += 3
	}
	if m.IsBrandShop {
		n += 3
	}
	if m.IsSelfShipping {
		n += 3
	}
	if m.ShopType != 0 {
		n += 2 + sovStore(uint64(m.ShopType))
	}
	if m.ShopLevel != 0 {
		n += 2 + sovStore(uint64(m.ShopLevel))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckExistsUsershopWithoutAuthenReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckExistsUsershopWithoutAuthenRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != 0 {
		n += 1 + sovStore(uint64(m.Data))
	}
	if m.HasError {
		n += 2
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckRegisterAndSendOtpRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasError {
		n += 2
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApiRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HasError {
		n += 2
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegionRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Region) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovStore(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DistrictRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *District) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovStore(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DistrictWardRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovStore(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DistrictWard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovStore(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegionReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegionWHReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DistrictReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RegionId != 0 {
		n += 1 + sovStore(uint64(m.RegionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DistrictWHReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RegionId != 0 {
		n += 1 + sovStore(uint64(m.RegionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DistrictWardReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DistrictId != 0 {
		n += 1 + sovStore(uint64(m.DistrictId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopInfoReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ChangeEmailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Otp)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhoneShopReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Otp)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UpdateShopDetailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ShopLogo)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopCover)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopBackground)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopDescription)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Slogan)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopAddress)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ShopRegionId != 0 {
		n += 1 + sovStore(uint64(m.ShopRegionId))
	}
	if m.ShopDistrictId != 0 {
		n += 1 + sovStore(uint64(m.ShopDistrictId))
	}
	if m.ShopWardId != 0 {
		n += 1 + sovStore(uint64(m.ShopWardId))
	}
	l = len(m.WarrantyInformation)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopRepresentative)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.TaxNumber)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.VersionNo != 0 {
		n += 1 + sovStore(uint64(m.VersionNo))
	}
	l = len(m.WarehouseAddress)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.WarehouseRegionId != 0 {
		n += 1 + sovStore(uint64(m.WarehouseRegionId))
	}
	if m.WarehouseDistrictId != 0 {
		n += 2 + sovStore(uint64(m.WarehouseDistrictId))
	}
	if m.WarehouseWardId != 0 {
		n += 2 + sovStore(uint64(m.WarehouseWardId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopDtoRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = m.Data.Size()
		n += 1 + l + sovStore(uint64(l))
	}
	if m.HasError {
		n += 2
	}
	l = len(m.ErrorsMess)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ErrorCode != 0 {
		n += 1 + sovStore(uint64(m.ErrorCode))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopDto) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovStore(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Phone)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.IsSelfShipping {
		n += 2
	}
	l = len(m.Code)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ShopStatus != 0 {
		n += 1 + sovStore(uint64(m.ShopStatus))
	}
	if m.ShopType != 0 {
		n += 1 + sovStore(uint64(m.ShopType))
	}
	if m.StatusDate != 0 {
		n += 1 + sovStore(uint64(m.StatusDate))
	}
	l = len(m.SystemUrl)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	if m.ShippingMethod != 0 {
		n += 1 + sovStore(uint64(m.ShippingMethod))
	}
	if m.PaymentMethod != 0 {
		n += 1 + sovStore(uint64(m.PaymentMethod))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.BusinessLicenseNumber)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopAddress)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.ShopWard)
	if l > 0 {
		n += 1 + l + sovStore(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	if m.LastLogin != 0 {
		n += 2 + sovStore(uint64(m.LastLogin))
	}
	l = len(m.Slogan)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ShopDescription)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ShopRepresentative)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ShopCountryCode)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.WarehouseCountryCode)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.TaxNumber)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ReasonCode)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	if m.ShopRegionId != 0 {
		n += 2 + sovStore(uint64(m.ShopRegionId))
	}
	if m.ShopDistrictId != 0 {
		n += 2 + sovStore(uint64(m.ShopDistrictId))
	}
	if m.WarehouseDistrictId != 0 {
		n += 2 + sovStore(uint64(m.WarehouseDistrictId))
	}
	if m.WarehouseRegionId != 0 {
		n += 2 + sovStore(uint64(m.WarehouseRegionId))
	}
	if m.ShopWardId != 0 {
		n += 2 + sovStore(uint64(m.ShopWardId))
	}
	if m.WarehouseWardId != 0 {
		n += 2 + sovStore(uint64(m.WarehouseWardId))
	}
	l = len(m.WarehouseAddress)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.WarehouseWard)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	if m.ClosingShopDate != 0 {
		n += 2 + sovStore(uint64(m.ClosingShopDate))
	}
	l = len(m.CompanyName)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ExternalLinkShop)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	if m.VersionNo != 0 {
		n += 2 + sovStore(uint64(m.VersionNo))
	}
	l = len(m.ShopBackground)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ShopCover)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.ShopLogo)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	l = len(m.WarrantyInformation)
	if l > 0 {
		n += 2 + l + sovStore(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ShopDetailReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovStore(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozStore(x uint64) (n int) {
	return sovStore(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AlowCheckOrderRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlowCheckOrderRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlowCheckOrderRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Value = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MenuRep) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MenuRep: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MenuRep: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &SendoMenu{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MenuRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MenuRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MenuRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreId", wireType)
			}
			m.StoreId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StoreId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendoMenu) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendoMenu: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendoMenu: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MenuName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MenuName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MenuCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MenuCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MenuStyle", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MenuStyle = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MenuUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MenuUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MenuUrlSpa", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MenuUrlSpa = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MenuID", wireType)
			}
			m.MenuID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MenuID |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Menus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Menus = append(m.Menus, &SendoMenu{})
			if err := m.Menus[len(m.Menus)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegShopStep2Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegShopStep2Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegShopStep2Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Otp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Otp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegShopStep3Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegShopStep3Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegShopStep3Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopWardId", wireType)
			}
			m.ShopWardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopWardId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopDistrictId", wireType)
			}
			m.ShopDistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopDistrictId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRegionId", wireType)
			}
			m.ShopRegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopRegionId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegShopStep4Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegShopStep4Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegShopStep4Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserAgentString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserAgentString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegShopStep5Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegShopStep5Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegShopStep5Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopType", wireType)
			}
			m.ShopType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegShopStep6Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegShopStep6Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegShopStep6Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegShopStep7Req) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegShopStep7Req: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegShopStep7Req: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalLinkShop", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExternalLinkShop = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRepresentative", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopRepresentative = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompanyName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessLicenseNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessLicenseNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessType", wireType)
			}
			m.BusinessType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BusinessType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsUseWarehouseAddress", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsUseWarehouseAddress = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopWardId", wireType)
			}
			m.ShopWardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopWardId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopDistrictId", wireType)
			}
			m.ShopDistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopDistrictId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRegionId", wireType)
			}
			m.ShopRegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopRegionId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileAttachment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileAttachment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileAttachments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileAttachments = append(m.FileAttachments, &FileUploadDto{})
			if err := m.FileAttachments[len(m.FileAttachments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdentificationNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdentificationNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FileUploadDto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FileUploadDto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FileUploadDto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlFile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UrlFile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Filebyte", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Filebyte = append(m.Filebyte[:0], dAtA[iNdEx:postIndex]...)
			if m.Filebyte == nil {
				m.Filebyte = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserContextDtoRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserContextDtoRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserContextDtoRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &UserContextDto{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasError", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasError = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorsMess", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorsMess = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserContextDto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserContextDto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserContextDto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopId", wireType)
			}
			m.ShopId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SentSms", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SentSms = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopStatus", wireType)
			}
			m.ShopStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsReview", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsReview = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsFresh", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsFresh = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityPoint", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.ActivityPoint = float32(math.Float32frombits(v))
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ActivityPointStatus", wireType)
			}
			m.ActivityPointStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ActivityPointStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DepositAmount", wireType)
			}
			m.DepositAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DepositAmount |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAffiliate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsAffiliate = bool(v != 0)
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsBrandShop", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsBrandShop = bool(v != 0)
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSelfShipping", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSelfShipping = bool(v != 0)
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopType", wireType)
			}
			m.ShopType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopLevel", wireType)
			}
			m.ShopLevel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopLevel |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckExistsUsershopWithoutAuthenReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckExistsUsershopWithoutAuthenReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckExistsUsershopWithoutAuthenReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckExistsUsershopWithoutAuthenRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckExistsUsershopWithoutAuthenRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckExistsUsershopWithoutAuthenRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			m.Data = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Data |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasError", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasError = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckRegisterAndSendOtpRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckRegisterAndSendOtpRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckRegisterAndSendOtpRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasError", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasError = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApiRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApiRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApiRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasError", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasError = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegionRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegionRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegionRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &Region{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Region) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Region: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Region: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DistrictRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistrictRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistrictRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &District{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *District) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: District: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: District: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DistrictWardRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistrictWardRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistrictWardRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &DistrictWard{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DistrictWard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistrictWard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistrictWard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegionReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegionReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegionReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegionWHReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegionWHReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegionWHReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DistrictReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistrictReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistrictReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionId", wireType)
			}
			m.RegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegionId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DistrictWHReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistrictWHReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistrictWHReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionId", wireType)
			}
			m.RegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegionId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DistrictWardReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DistrictWardReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DistrictWardReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DistrictId", wireType)
			}
			m.DistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DistrictId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopInfoReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopInfoReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopInfoReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ChangeEmailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ChangeEmailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ChangeEmailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Otp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Otp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneShopReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneShopReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneShopReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Otp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Otp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UpdateShopDetailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateShopDetailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateShopDetailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopLogo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopLogo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopCover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopCover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopBackground", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopBackground = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopDescription = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slogan", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slogan = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRegionId", wireType)
			}
			m.ShopRegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopRegionId |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopDistrictId", wireType)
			}
			m.ShopDistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopDistrictId |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopWardId", wireType)
			}
			m.ShopWardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopWardId |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarrantyInformation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WarrantyInformation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRepresentative", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopRepresentative = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaxNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaxNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionNo", wireType)
			}
			m.VersionNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VersionNo |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WarehouseAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseRegionId", wireType)
			}
			m.WarehouseRegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WarehouseRegionId |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseDistrictId", wireType)
			}
			m.WarehouseDistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WarehouseDistrictId |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseWardId", wireType)
			}
			m.WarehouseWardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WarehouseWardId |= (uint32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopDtoRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: shopDtoRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: shopDtoRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Data == nil {
				m.Data = &ShopDto{}
			}
			if err := m.Data.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasError", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasError = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorsMess", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorsMess = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopDto) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: shopDto: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: shopDto: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSelfShipping", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSelfShipping = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Code = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopStatus", wireType)
			}
			m.ShopStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopStatus |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopType", wireType)
			}
			m.ShopType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopType |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusDate", wireType)
			}
			m.StatusDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StatusDate |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShippingMethod", wireType)
			}
			m.ShippingMethod = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShippingMethod |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentMethod", wireType)
			}
			m.PaymentMethod = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PaymentMethod |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessLicenseNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BusinessLicenseNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopWard", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopWard = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastLogin", wireType)
			}
			m.LastLogin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastLogin |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slogan", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slogan = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopDescription = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRepresentative", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopRepresentative = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopCountryCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopCountryCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseCountryCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WarehouseCountryCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaxNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaxNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReasonCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReasonCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopRegionId", wireType)
			}
			m.ShopRegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopRegionId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopDistrictId", wireType)
			}
			m.ShopDistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopDistrictId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseDistrictId", wireType)
			}
			m.WarehouseDistrictId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WarehouseDistrictId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseRegionId", wireType)
			}
			m.WarehouseRegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WarehouseRegionId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopWardId", wireType)
			}
			m.ShopWardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ShopWardId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseWardId", wireType)
			}
			m.WarehouseWardId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WarehouseWardId |= (int32(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WarehouseAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarehouseWard", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WarehouseWard = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClosingShopDate", wireType)
			}
			m.ClosingShopDate = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClosingShopDate |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompanyName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CompanyName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 35:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExternalLinkShop", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExternalLinkShop = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 36:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VersionNo", wireType)
			}
			m.VersionNo = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VersionNo |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 37:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopBackground", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopBackground = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 38:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopCover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopCover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 39:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShopLogo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShopLogo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 40:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WarrantyInformation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStore
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStore
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WarrantyInformation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ShopDetailReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStore
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ShopDetailReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ShopDetailReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipStore(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthStore
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStore(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStore
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStore
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStore
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthStore
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowStore
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipStore(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthStore = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStore   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("seller/store/store.proto", fileDescriptor_store_bad8e53c75d2a690) }

var fileDescriptor_store_bad8e53c75d2a690 = []byte{
	// 2454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xef, 0x6e, 0xdb, 0xc8,
	0x11, 0x3f, 0xd9, 0x96, 0x2d, 0x8d, 0x2c, 0xc9, 0xa6, 0xed, 0x8b, 0xa2, 0x8b, 0x13, 0x87, 0x49,
	0x2e, 0x4e, 0x9a, 0x93, 0x71, 0x4e, 0xe2, 0x5c, 0x5b, 0x5c, 0x0b, 0xc7, 0xce, 0x1f, 0x03, 0x49,
	0xee, 0x40, 0xd5, 0x08, 0x70, 0x1f, 0x8e, 0xb7, 0x16, 0xd7, 0xd2, 0xd6, 0x14, 0x49, 0x73, 0x57,
	0x76, 0xfc, 0xbd, 0x2f, 0x52, 0xa0, 0xe8, 0xb7, 0xa2, 0x28, 0xd0, 0x87, 0x68, 0xbf, 0xf5, 0x11,
	0x8a, 0xbc, 0x40, 0x5f, 0xa1, 0x98, 0x59, 0x52, 0x22, 0xf5, 0xcf, 0x4c, 0x7d, 0xe8, 0x17, 0x9b,
	0x3b, 0x3b, 0xb3, 0xb3, 0xbb, 0x9c, 0xf9, 0xcd, 0x6f, 0x28, 0xa8, 0x49, 0xee, 0xba, 0x3c, 0xdc,
	0x92, 0xca, 0x0f, 0xb9, 0xfe, 0xdb, 0x08, 0x42, 0x5f, 0xf9, 0xc6, 0x75, 0xc9, 0x3d, 0xc7, 0x6f,
	0x9c, 0x7d, 0xdd, 0x60, 0x81, 0x68, 0x68, 0xb5, 0x06, 0x29, 0xd4, 0x6f, 0xb4, 0x7d, 0xbf, 0xed,
	0xf2, 0x2d, 0x16, 0x88, 0x2d, 0xe6, 0x79, 0xbe, 0x62, 0x4a, 0xf8, 0x9e, 0xd4, 0x86, 0xe6, 0x03,
	0x58, 0xde, 0x75, 0xfd, 0xf3, 0xbd, 0x0e, 0x6f, 0x9d, 0x7c, 0x17, 0x3a, 0x3c, 0xb4, 0xb8, 0x34,
	0x56, 0x21, 0x7f, 0xc6, 0xdc, 0x1e, 0xaf, 0xe5, 0x36, 0x72, 0x9b, 0x05, 0x4b, 0x0f, 0xcc, 0x3d,
	0x58, 0x78, 0xcb, 0xbd, 0x9e, 0xc5, 0x03, 0xe3, 0x1b, 0x98, 0xdb, 0x67, 0x8a, 0xd5, 0x72, 0x1b,
	0xb3, 0x9b, 0xa5, 0xed, 0xbb, 0x8d, 0x89, 0xde, 0x1b, 0x4d, 0x9c, 0x21, 0x33, 0xb2, 0x30, 0xef,
	0xc4, 0x8b, 0x48, 0xa3, 0x06, 0x0b, 0xa4, 0x73, 0xe0, 0x90, 0x9f, 0xbc, 0x15, 0x0f, 0xcd, 0xff,
	0xe4, 0xa0, 0xd8, 0x37, 0x34, 0xea, 0x50, 0xc0, 0xff, 0xef, 0x58, 0x57, 0x6f, 0xa8, 0x68, 0xf5,
	0xc7, 0xf1, 0xdc, 0x9e, 0xef, 0xf0, 0xda, 0xcc, 0x60, 0x0e, 0xc7, 0xc6, 0x0d, 0x28, 0xe2, 0x73,
	0x53, 0x5d, 0xb8, 0xbc, 0x36, 0x4b, 0x93, 0x03, 0x01, 0x7a, 0xc7, 0xc1, 0x61, 0xe8, 0xd6, 0xe6,
	0x68, 0x2e, 0x1e, 0x1a, 0x37, 0x01, 0xa2, 0xc7, 0x66, 0xc0, 0x6a, 0x79, 0x9a, 0x4c, 0x48, 0x8c,
	0xcf, 0x61, 0x1e, 0x47, 0x07, 0xfb, 0xb5, 0x79, 0xda, 0x76, 0x34, 0x32, 0x7e, 0x05, 0x79, 0x7c,
	0x92, 0xb5, 0x85, 0x4f, 0xb8, 0x15, 0x6d, 0x62, 0xb6, 0xa0, 0x6a, 0xf1, 0x76, 0xb3, 0xe3, 0x07,
	0x4d, 0xc5, 0x83, 0x6d, 0x8b, 0x9f, 0x1a, 0x5f, 0x40, 0x51, 0x76, 0xfc, 0xc0, 0xf6, 0x12, 0xe7,
	0x46, 0x01, 0x9d, 0xfb, 0x36, 0x2c, 0x06, 0x1d, 0xdf, 0xe3, 0xb6, 0xd7, 0xeb, 0x1e, 0xf1, 0x30,
	0x3a, 0x7b, 0x89, 0x64, 0xef, 0x48, 0x64, 0x2c, 0xc1, 0xac, 0xaf, 0x82, 0xe8, 0xe0, 0xf8, 0x68,
	0xfe, 0x39, 0x97, 0xf2, 0xf2, 0x18, 0xbd, 0xdc, 0x86, 0x45, 0xf2, 0xc2, 0x1c, 0x27, 0xe4, 0x52,
	0x46, 0x8e, 0x4a, 0x28, 0xdb, 0xd5, 0x22, 0x63, 0x23, 0x52, 0x39, 0x67, 0xa1, 0x63, 0x0b, 0x87,
	0x7c, 0xe5, 0x2d, 0x40, 0xd9, 0x7b, 0x16, 0x3a, 0x07, 0x8e, 0xb1, 0x09, 0x4b, 0xa4, 0xe1, 0x08,
	0xa9, 0x42, 0xd1, 0x52, 0xa8, 0x35, 0x4b, 0x5a, 0x15, 0x94, 0xef, 0x47, 0xe2, 0x03, 0xc7, 0xb8,
	0x0b, 0x24, 0xb1, 0x43, 0xde, 0x16, 0xbe, 0x87, 0x7a, 0x73, 0xa4, 0x47, 0x1e, 0x2c, 0x12, 0x1e,
	0x38, 0xe6, 0xb7, 0xa9, 0x7d, 0x3e, 0xc1, 0x7d, 0x3e, 0x84, 0xe5, 0x9e, 0xe4, 0xa1, 0xcd, 0xda,
	0xdc, 0x53, 0x36, 0xae, 0xe7, 0xb5, 0xa3, 0xcd, 0x56, 0x71, 0x62, 0x17, 0xe5, 0x4d, 0x12, 0x9b,
	0x8d, 0x94, 0xf9, 0xd3, 0xe4, 0x65, 0xaa, 0x8b, 0x80, 0x47, 0xd1, 0x46, 0x97, 0xf9, 0xbb, 0x8b,
	0x80, 0x9b, 0x8f, 0x52, 0xfa, 0x3b, 0xa8, 0x7f, 0x1d, 0x68, 0xda, 0xee, 0x85, 0x6e, 0xe4, 0x65,
	0x01, 0xc7, 0x87, 0xa1, 0x6b, 0xfe, 0x33, 0x9f, 0x52, 0x7f, 0x86, 0xea, 0x06, 0xcc, 0xb5, 0x30,
	0x04, 0xb5, 0x2a, 0x3d, 0x63, 0x12, 0xf1, 0x2e, 0x13, 0x6e, 0xf4, 0x6e, 0xf4, 0xc0, 0x78, 0x04,
	0x06, 0xff, 0xa0, 0x78, 0xe8, 0x31, 0xd7, 0x76, 0x85, 0x77, 0x62, 0xe3, 0xb2, 0xd1, 0x4b, 0x5a,
	0x8a, 0x67, 0xde, 0x08, 0xef, 0x04, 0xd7, 0x37, 0xb6, 0x60, 0x25, 0xba, 0xae, 0x20, 0xe4, 0x92,
	0x7b, 0x98, 0xbb, 0x67, 0x3c, 0x0a, 0x58, 0x43, 0xdf, 0x59, 0x72, 0x06, 0x5f, 0x67, 0xcb, 0xef,
	0x06, 0xcc, 0xbb, 0xd0, 0x71, 0xa3, 0xa3, 0xb7, 0x14, 0xc9, 0x28, 0x74, 0x76, 0xe0, 0xda, 0x51,
	0x4f, 0x0a, 0x8f, 0x4b, 0x69, 0xbb, 0xa2, 0xc5, 0x3d, 0xd9, 0x8f, 0xa2, 0x79, 0xd2, 0x5e, 0x8b,
	0xa7, 0xdf, 0xe8, 0xd9, 0x28, 0x9e, 0xee, 0x40, 0xb9, 0x6f, 0x47, 0xd7, 0xb8, 0xa0, 0xdf, 0x5c,
	0x2c, 0xc4, 0xab, 0x34, 0x9e, 0x41, 0x4d, 0x48, 0xbb, 0x27, 0x39, 0x46, 0x0b, 0xef, 0xf8, 0xf8,
	0x14, 0x87, 0x56, 0x81, 0xc0, 0x64, 0x4d, 0xc8, 0x43, 0xc9, 0xdf, 0xc7, 0xb3, 0x71, 0x90, 0xad,
	0x42, 0x9e, 0x82, 0xb7, 0x56, 0xd4, 0xb7, 0x45, 0x03, 0x4c, 0xb5, 0xae, 0x7f, 0x24, 0x5c, 0x5e,
	0x03, 0x12, 0x47, 0xa3, 0x91, 0xa8, 0x2d, 0x5d, 0x1e, 0xb5, 0x8b, 0x99, 0xa2, 0xb6, 0x9c, 0x31,
	0x6a, 0x2b, 0xa3, 0x51, 0x6b, 0xdc, 0x87, 0xea, 0xb1, 0x70, 0xb9, 0xcd, 0x94, 0x62, 0xad, 0x4e,
	0x97, 0x7b, 0xaa, 0x56, 0xa5, 0x7d, 0x55, 0x50, 0xbc, 0xdb, 0x97, 0x1a, 0x4d, 0x58, 0x1a, 0x52,
	0x94, 0xb5, 0x25, 0xc2, 0x8c, 0xcd, 0x29, 0x98, 0xf1, 0x52, 0xb8, 0xfc, 0x30, 0x70, 0x7d, 0xe6,
	0xec, 0x2b, 0xdf, 0xaa, 0xa6, 0xd7, 0x94, 0xc6, 0x63, 0x58, 0x13, 0x0e, 0xf7, 0x94, 0x38, 0x16,
	0x2d, 0x42, 0xf8, 0xf8, 0xa5, 0x2e, 0xd3, 0x1e, 0x56, 0xd3, 0x93, 0xfa, 0x9d, 0x9a, 0xe7, 0x50,
	0x4e, 0x2d, 0x8b, 0x79, 0x42, 0x5b, 0x4b, 0x82, 0x0e, 0x0a, 0x28, 0x72, 0xae, 0x43, 0xa1, 0x17,
	0xba, 0x36, 0x8e, 0xa3, 0xa0, 0x5e, 0xe8, 0x85, 0x2e, 0x2e, 0x80, 0x09, 0x40, 0x31, 0xa1, 0xb3,
	0x9e, 0x9e, 0x11, 0x9b, 0x51, 0xf5, 0xe8, 0x42, 0xe9, 0x88, 0x5d, 0xb4, 0xfa, 0x63, 0xf3, 0xaf,
	0x39, 0x58, 0x3e, 0x94, 0x3c, 0xdc, 0xf3, 0x3d, 0xc5, 0x3f, 0x28, 0x3c, 0x11, 0x97, 0xc6, 0xb7,
	0x30, 0xe7, 0xe8, 0xb2, 0x92, 0xdb, 0x2c, 0x6d, 0x3f, 0x98, 0x72, 0x19, 0x43, 0xb6, 0x64, 0x86,
	0x9b, 0xef, 0x30, 0x69, 0xf3, 0x30, 0xf4, 0x35, 0x22, 0x16, 0xac, 0x42, 0x87, 0xc9, 0x17, 0x38,
	0x36, 0x6e, 0x41, 0x89, 0x26, 0xa4, 0xdd, 0xc5, 0x88, 0xd1, 0x19, 0x07, 0x5a, 0xf4, 0x16, 0x03,
	0x66, 0x1d, 0xf4, 0xc8, 0xa6, 0x4c, 0xd6, 0xb0, 0x54, 0x24, 0x09, 0x56, 0x13, 0xf3, 0x0f, 0x79,
	0xa8, 0xa4, 0xbd, 0x4e, 0x47, 0xe8, 0xf1, 0xe9, 0x8f, 0xf7, 0xdb, 0x73, 0x5d, 0x6d, 0x32, 0x1b,
	0xdd, 0x6f, 0xcf, 0x75, 0xc9, 0x64, 0x1d, 0x80, 0x9d, 0x31, 0xc5, 0x42, 0x82, 0x1d, 0x9d, 0xe4,
	0x45, 0x2d, 0xc1, 0xba, 0x74, 0x0d, 0x08, 0x83, 0x30, 0xfc, 0xf2, 0xba, 0xf0, 0xe0, 0xf0, 0xc0,
	0x21, 0xb0, 0x22, 0x54, 0xec, 0x4a, 0x4a, 0xe1, 0x82, 0xb5, 0x80, 0xe3, 0x66, 0x57, 0xe2, 0xa9,
	0xc9, 0x46, 0x2a, 0xa6, 0xa8, 0x32, 0xf5, 0x93, 0xa0, 0x49, 0x92, 0x14, 0xd0, 0x15, 0x52, 0x40,
	0x87, 0x7b, 0x15, 0xd2, 0x0e, 0xf9, 0x99, 0xe0, 0xe7, 0x94, 0x96, 0x05, 0xab, 0x20, 0xa4, 0x45,
	0x63, 0xb4, 0x13, 0xd2, 0x3e, 0x0e, 0xb9, 0xec, 0x50, 0x6e, 0x16, 0xac, 0x05, 0x21, 0x5f, 0xe2,
	0x10, 0x4f, 0xae, 0xfc, 0x13, 0xee, 0x45, 0x59, 0xa9, 0x07, 0x89, 0x54, 0x5e, 0x4c, 0xa5, 0xf2,
	0x3d, 0xa8, 0xb0, 0x96, 0x12, 0x67, 0x42, 0x5d, 0xd8, 0x81, 0x2f, 0x3c, 0x45, 0xb9, 0x35, 0x63,
	0x95, 0x63, 0xe9, 0xf7, 0x28, 0x34, 0xb6, 0x61, 0x2d, 0xad, 0x16, 0x1f, 0xa9, 0x4a, 0x47, 0x5a,
	0x49, 0x69, 0x47, 0x67, 0xbb, 0x07, 0x15, 0x87, 0x07, 0xbe, 0x14, 0xca, 0x66, 0x5d, 0xbf, 0xe7,
	0xa9, 0xda, 0xd2, 0x46, 0x6e, 0x73, 0xd6, 0x2a, 0x47, 0xd2, 0x5d, 0x12, 0x22, 0x98, 0x08, 0x69,
	0xb3, 0xe3, 0x63, 0xe1, 0x0a, 0xa6, 0x38, 0x25, 0x4c, 0xc1, 0x2a, 0x09, 0xb9, 0x1b, 0x8b, 0x0c,
	0x13, 0xca, 0x42, 0xda, 0x47, 0x21, 0xf3, 0x1c, 0x0d, 0xd8, 0x46, 0xac, 0xf3, 0x1c, 0x65, 0x84,
	0xd5, 0x9b, 0xb0, 0x24, 0xa4, 0x2d, 0xb9, 0x7b, 0x6c, 0xcb, 0x8e, 0x08, 0x02, 0x2c, 0x50, 0x2b,
	0xa4, 0x56, 0x11, 0xb2, 0xc9, 0xdd, 0xe3, 0x66, 0x24, 0x4d, 0x17, 0xa3, 0xd5, 0x74, 0x31, 0xc2,
	0x20, 0xa0, 0x49, 0x97, 0x9f, 0x71, 0xb7, 0xb6, 0xa6, 0xc3, 0x10, 0x25, 0x6f, 0x50, 0x60, 0xfe,
	0x12, 0xee, 0x10, 0x57, 0x7b, 0xf1, 0x41, 0x48, 0x85, 0x48, 0x1a, 0x12, 0xa2, 0x09, 0xd5, 0xf1,
	0x7b, 0x6a, 0xb7, 0xa7, 0x3a, 0xdc, 0x8b, 0x0a, 0x52, 0x22, 0x2a, 0xe9, 0xd9, 0x0c, 0xb2, 0x98,
	0x4a, 0x34, 0xed, 0x27, 0x61, 0x3e, 0x4b, 0x66, 0xd5, 0x60, 0x01, 0x53, 0x8a, 0xb5, 0xe3, 0x88,
	0x8e, 0x87, 0x66, 0x13, 0xea, 0xe4, 0x11, 0x21, 0x52, 0x2a, 0x1e, 0xee, 0x7a, 0x0e, 0x32, 0x9f,
	0xef, 0x54, 0x80, 0x8e, 0x52, 0x8b, 0xe6, 0x26, 0x2f, 0x3a, 0x93, 0x5e, 0xf4, 0xb7, 0x30, 0xbf,
	0x1b, 0x88, 0x2b, 0x2c, 0xf0, 0x1c, 0x8a, 0x1a, 0xb3, 0x71, 0x8d, 0xa7, 0x29, 0x26, 0x7b, 0x7b,
	0x0a, 0xe4, 0x44, 0x36, 0x9a, 0xc6, 0x3e, 0x82, 0x79, 0x3d, 0x36, 0x2a, 0x30, 0x23, 0x62, 0x02,
	0x3b, 0x23, 0x9c, 0xfe, 0xcd, 0xcf, 0x24, 0x6e, 0xfe, 0x25, 0x94, 0xe2, 0x6a, 0x82, 0x3e, 0x9f,
	0xa5, 0x7c, 0xde, 0x99, 0xe2, 0xb3, 0x6f, 0xa5, 0xbd, 0x36, 0xa0, 0x10, 0x4b, 0x32, 0xf9, 0x7d,
	0x07, 0xd5, 0x58, 0x1f, 0x6b, 0x1e, 0xfa, 0xfe, 0x75, 0xca, 0xf7, 0xfd, 0x0c, 0xbe, 0xc9, 0x52,
	0xfb, 0xdf, 0x86, 0xc5, 0xa4, 0x34, 0xd3, 0x1e, 0x4a, 0x83, 0xdb, 0x3e, 0x35, 0xcb, 0x50, 0xd2,
	0x83, 0xf7, 0xaf, 0x71, 0xf8, 0x30, 0x79, 0x2f, 0x44, 0xd2, 0x06, 0x15, 0x36, 0x22, 0x69, 0x61,
	0xcc, 0x09, 0x1f, 0x41, 0xb9, 0xef, 0xfb, 0xf5, 0xa5, 0xda, 0xdb, 0xc3, 0x27, 0x3f, 0x45, 0x28,
	0x4c, 0x56, 0x7a, 0x6d, 0x01, 0x4e, 0xbf, 0xca, 0xe3, 0xe6, 0x30, 0x91, 0x0f, 0xbc, 0x63, 0x1f,
	0x37, 0xf7, 0x0d, 0x54, 0xf6, 0x3a, 0xcc, 0x6b, 0xf3, 0x17, 0x88, 0xdc, 0xb8, 0x42, 0x1f, 0xd2,
	0x73, 0x49, 0x48, 0x8f, 0x78, 0xf6, 0xcc, 0x80, 0x67, 0xef, 0xc0, 0xe2, 0xf7, 0x48, 0x5f, 0x9a,
	0xc4, 0x0e, 0x4e, 0x07, 0xdc, 0x26, 0x97, 0xe4, 0x36, 0xa3, 0x76, 0x7f, 0xcb, 0xc3, 0xca, 0x61,
	0xe0, 0x30, 0x45, 0x96, 0xfb, 0x5c, 0x45, 0x7e, 0x63, 0xbc, 0x70, 0xfd, 0xb6, 0x9f, 0xac, 0x33,
	0x6f, 0xfc, 0xb6, 0xdf, 0xc7, 0x8b, 0x96, 0x7f, 0xd6, 0xef, 0x03, 0x48, 0x7d, 0x0f, 0x05, 0x48,
	0x4a, 0x68, 0xfa, 0x88, 0xb5, 0x4e, 0xda, 0xa1, 0xdf, 0xf3, 0x9c, 0x28, 0x49, 0x89, 0xd1, 0x3c,
	0xef, 0x4b, 0x8d, 0x07, 0x31, 0x1b, 0xe2, 0xb2, 0x15, 0x8a, 0x00, 0x49, 0x42, 0x54, 0x82, 0x68,
	0x81, 0xfd, 0x81, 0x18, 0xa1, 0x5c, 0xba, 0x7e, 0x9b, 0x79, 0x11, 0xbd, 0x8c, 0x46, 0x23, 0xac,
	0x6c, 0x7e, 0x94, 0x95, 0x8d, 0x32, 0x29, 0x2c, 0x49, 0xe5, 0x21, 0x26, 0x35, 0x8e, 0x99, 0x15,
	0x48, 0x6f, 0x98, 0x99, 0x0d, 0xb3, 0xbc, 0x22, 0x69, 0x25, 0x59, 0xde, 0xd7, 0xb0, 0x7a, 0xce,
	0xc2, 0x90, 0x79, 0xea, 0xc2, 0x16, 0xde, 0xb1, 0x1f, 0x76, 0x89, 0x00, 0x45, 0x84, 0x72, 0x25,
	0x9e, 0x3b, 0x18, 0x4c, 0x4d, 0x62, 0xdd, 0xa5, 0x89, 0xac, 0x7b, 0x1d, 0x40, 0xb1, 0x0f, 0x31,
	0xe1, 0xd2, 0xf5, 0xad, 0xa8, 0xd8, 0x87, 0x88, 0x39, 0xaf, 0x03, 0x9c, 0xf1, 0x50, 0x12, 0x27,
	0xf3, 0x89, 0x62, 0xce, 0x5a, 0xc5, 0x48, 0xf2, 0xce, 0x37, 0x7e, 0x01, 0xcb, 0xa3, 0x64, 0xb9,
	0xa2, 0x3b, 0x82, 0xf3, 0x61, 0x9e, 0xdc, 0x80, 0x95, 0x81, 0xf2, 0xe0, 0x16, 0xab, 0x74, 0xee,
	0xc1, 0x3a, 0xfd, 0xab, 0xdc, 0x86, 0xb5, 0x81, 0x7e, 0xf2, 0x3e, 0x97, 0xc8, 0x62, 0xb0, 0x58,
	0xe2, 0x52, 0x1f, 0x26, 0x37, 0x14, 0xdf, 0xec, 0x32, 0xe9, 0x57, 0xfb, 0x13, 0xfa, 0x7a, 0xcd,
	0x3f, 0xe6, 0x74, 0xfc, 0x45, 0x0c, 0x6e, 0x27, 0xc5, 0xe0, 0xcc, 0x29, 0xf0, 0x12, 0x1b, 0xfd,
	0x1f, 0xa8, 0xdb, 0xdf, 0x4b, 0x9a, 0x39, 0x21, 0x67, 0xcb, 0x00, 0x59, 0x83, 0x7c, 0x9d, 0x4d,
	0xe6, 0xeb, 0xb8, 0xfa, 0x3e, 0x37, 0xb6, 0xbe, 0xc7, 0xdd, 0x60, 0x3e, 0xd1, 0x0d, 0x0e, 0x11,
	0xb1, 0xf9, 0x11, 0x22, 0x96, 0x22, 0x05, 0x0b, 0x43, 0xa4, 0x00, 0xad, 0x49, 0xcd, 0x46, 0x74,
	0xa0, 0x5c, 0x98, 0xb5, 0x40, 0x8b, 0xf6, 0x91, 0xa0, 0x20, 0x0a, 0x5c, 0x48, 0xc5, 0xbb, 0x44,
	0xe4, 0x8a, 0x11, 0x0a, 0x90, 0x04, 0xa9, 0x1c, 0xa1, 0x80, 0xde, 0x9d, 0xdd, 0xe5, 0xaa, 0xe3,
	0x3b, 0x14, 0xff, 0xd4, 0xe9, 0x68, 0xf1, 0x5b, 0x92, 0x22, 0x65, 0x0a, 0xd8, 0x05, 0x76, 0x14,
	0xb1, 0x5e, 0x89, 0xf4, 0xca, 0x91, 0x34, 0x52, 0xeb, 0x23, 0xe1, 0x62, 0x12, 0x09, 0xa7, 0x74,
	0x96, 0xe5, 0x69, 0x9d, 0xe5, 0x30, 0x6e, 0x54, 0x46, 0x71, 0x23, 0xbe, 0x1d, 0x8c, 0xc6, 0xa8,
	0xab, 0x2a, 0xc4, 0x49, 0x9e, 0xa0, 0x96, 0x4b, 0x29, 0x6a, 0xb9, 0x0e, 0xe0, 0x32, 0xa9, 0x10,
	0x37, 0x85, 0x47, 0x01, 0x3c, 0x6b, 0x15, 0x51, 0xf2, 0x06, 0x05, 0x09, 0x18, 0x33, 0x52, 0x30,
	0x36, 0x0e, 0x09, 0x57, 0xc6, 0x23, 0xe1, 0x04, 0xa4, 0x58, 0x9d, 0x88, 0x14, 0x0f, 0x61, 0x39,
	0x42, 0xeb, 0x9e, 0xa7, 0xc2, 0x0b, 0x1d, 0xb0, 0x6b, 0x83, 0xc5, 0xf7, 0xb4, 0x9c, 0xbe, 0x5f,
	0x3d, 0x81, 0xcf, 0x07, 0x69, 0x98, 0x32, 0xf8, 0x5c, 0xb7, 0x74, 0xfd, 0xd9, 0xa4, 0x55, 0x1a,
	0x8b, 0xae, 0x0d, 0x63, 0xd1, 0x2d, 0x28, 0x85, 0x9c, 0x49, 0xdf, 0xd3, 0x2b, 0xd5, 0x74, 0x2e,
	0x69, 0x11, 0xd9, 0x8f, 0x22, 0xf4, 0xf5, 0x31, 0xbd, 0xee, 0x38, 0x84, 0xae, 0x8f, 0xed, 0x9d,
	0x27, 0x02, 0xd0, 0x17, 0x9a, 0xb8, 0x8f, 0x03, 0xa0, 0x09, 0x20, 0x77, 0x83, 0x2c, 0xc6, 0x80,
	0xdc, 0x70, 0x15, 0x58, 0x1f, 0xe9, 0xf5, 0xc7, 0x42, 0xda, 0x4d, 0x52, 0x1b, 0x86, 0xb4, 0xf1,
	0x78, 0x7c, 0x6b, 0x02, 0x1e, 0xdf, 0x83, 0x4a, 0x7a, 0xe1, 0xda, 0x06, 0x69, 0x96, 0x53, 0xab,
	0xa2, 0xff, 0x96, 0xeb, 0x4b, 0xcc, 0x3f, 0x7d, 0x6f, 0x98, 0xc6, 0xb7, 0x29, 0x22, 0xab, 0xd1,
	0x04, 0xd5, 0x7c, 0xcc, 0xe5, 0xe1, 0x6f, 0x38, 0xe6, 0xe8, 0x37, 0x9c, 0xf1, 0x5f, 0x91, 0xee,
	0x4c, 0xf8, 0x8a, 0x94, 0xae, 0x3f, 0x77, 0x87, 0xeb, 0xcf, 0x18, 0x8a, 0x70, 0x6f, 0x2c, 0x45,
	0x48, 0x53, 0x8d, 0x2f, 0x87, 0xa9, 0x46, 0x8a, 0xa6, 0xdc, 0x1f, 0xa2, 0x29, 0x93, 0xca, 0xf0,
	0xe6, 0xc4, 0x32, 0x6c, 0x56, 0xa1, 0x9c, 0xe2, 0x41, 0xdb, 0x7f, 0x59, 0x86, 0xc5, 0x26, 0x16,
	0x8f, 0x26, 0x0f, 0xcf, 0x44, 0x8b, 0x1b, 0x7f, 0xca, 0xc1, 0xc6, 0x65, 0x2d, 0x8d, 0xf1, 0x9b,
	0x29, 0x45, 0x28, 0x43, 0x2b, 0x55, 0xbf, 0x9a, 0xbd, 0x34, 0x3f, 0x33, 0x7e, 0x0f, 0x8b, 0xc9,
	0x8f, 0xbb, 0xc6, 0xc3, 0xe9, 0x5d, 0x46, 0xf2, 0x2b, 0x70, 0xfd, 0x51, 0xf6, 0x8f, 0x20, 0x63,
	0x7c, 0x3d, 0xce, 0xea, 0xeb, 0xf1, 0xd5, 0x7d, 0x3d, 0xc9, 0xea, 0xeb, 0xc9, 0xd5, 0x7d, 0x3d,
	0xcd, 0xea, 0xeb, 0xe9, 0xd5, 0x7d, 0xed, 0x64, 0xf5, 0xb5, 0x73, 0x75, 0x5f, 0xcf, 0xb2, 0xfa,
	0x7a, 0xf6, 0xbf, 0xf8, 0xfa, 0x01, 0xe0, 0x15, 0x57, 0x1a, 0x35, 0xa5, 0x71, 0xf7, 0xf2, 0x5e,
	0x97, 0x9f, 0xd6, 0xb3, 0x68, 0xe1, 0xda, 0x3f, 0xc2, 0x62, 0x7f, 0xed, 0xf7, 0xaf, 0xa5, 0xf1,
	0xe5, 0xa5, 0x76, 0xd4, 0xc5, 0x65, 0x5e, 0xff, 0x27, 0x5a, 0x3f, 0xae, 0x11, 0xd3, 0xd7, 0x4f,
	0xf4, 0x94, 0xf5, 0x6c, 0x7a, 0xe8, 0xc1, 0x81, 0x4a, 0xc2, 0x03, 0x9e, 0x61, 0x33, 0x4b, 0x77,
	0xfc, 0xfa, 0xd3, 0xbc, 0xb8, 0xb0, 0x94, 0xf4, 0xc2, 0x42, 0x47, 0x4e, 0x7d, 0xe7, 0x43, 0x5d,
	0x6c, 0x3d, 0xbb, 0x2e, 0x7a, 0xe3, 0x50, 0x7a, 0xc5, 0x55, 0xdc, 0xd5, 0x4e, 0xbd, 0xb4, 0x44,
	0xeb, 0xfb, 0xc9, 0x81, 0xf5, 0x13, 0x54, 0x2c, 0x7e, 0x9a, 0xe8, 0x96, 0x8d, 0x07, 0x53, 0x41,
	0x33, 0xd9, 0x55, 0xd7, 0xa7, 0x7d, 0x73, 0xd1, 0x1f, 0x7a, 0xcc, 0xcf, 0x0c, 0x06, 0x55, 0xdd,
	0x19, 0x93, 0x19, 0x55, 0xb5, 0x9f, 0xdb, 0xc5, 0x8f, 0x89, 0x43, 0x50, 0xfb, 0x6e, 0x4c, 0xfb,
	0x3a, 0x92, 0x6c, 0xf0, 0xb3, 0xad, 0x6f, 0xc7, 0x47, 0xe8, 0x9b, 0xfe, 0xcc, 0x0e, 0x8e, 0xa0,
	0x1c, 0xbd, 0x6c, 0x5d, 0x32, 0xa7, 0xc6, 0x6f, 0xaa, 0xb2, 0xd6, 0xef, 0x65, 0x68, 0xd4, 0xc8,
	0xc7, 0x09, 0x2c, 0x0d, 0x7f, 0xa1, 0x30, 0x1a, 0xd3, 0xa2, 0x65, 0xf4, 0x73, 0x46, 0x76, 0x67,
	0x4d, 0x58, 0x78, 0xc5, 0x15, 0xfd, 0x06, 0x3c, 0xad, 0x93, 0x8c, 0x7e, 0x4f, 0xae, 0x5f, 0xae,
	0x13, 0x98, 0x9f, 0x19, 0x02, 0x56, 0xf5, 0xa6, 0xd2, 0x3f, 0x7b, 0x1b, 0xd3, 0x62, 0x7e, 0xe4,
	0x17, 0xf2, 0x4c, 0x2f, 0xe4, 0xf9, 0xfe, 0x3f, 0x3e, 0xde, 0xcc, 0xfd, 0xeb, 0xe3, 0xcd, 0xdc,
	0xbf, 0x3f, 0xde, 0xcc, 0xfd, 0xb0, 0xd3, 0x16, 0xca, 0x65, 0x47, 0xb1, 0xa1, 0xb7, 0x45, 0x3f,
	0xc0, 0x1f, 0xf5, 0x8e, 0xb7, 0x84, 0xa7, 0x09, 0xdb, 0x57, 0x2c, 0x10, 0xf2, 0xab, 0xb6, 0xbf,
	0x95, 0xfc, 0x99, 0xff, 0x68, 0x9e, 0xf4, 0x1e, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xcb,
	0x05, 0x36, 0xfd, 0x1f, 0x00, 0x00,
}
