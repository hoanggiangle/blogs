// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import logger "gitlab.sendo.vn/core/golang-sdk/new/logger"
import mock "github.com/stretchr/testify/mock"
import sendo "gitlab.sendo.vn/core/golang-sdk/new"

// ServiceContext is an autogenerated mock type for the ServiceContext type
type ServiceContext struct {
	mock.Mock
}

// Broker provides a mock function with given fields:
func (_m *ServiceContext) Broker() sendo.Broker {
	ret := _m.Called()

	var r0 sendo.Broker
	if rf, ok := ret.Get(0).(func() sendo.Broker); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sendo.Broker)
		}
	}

	return r0
}

// Logger provides a mock function with given fields: prefix
func (_m *ServiceContext) Logger(prefix string) logger.Logger {
	ret := _m.Called(prefix)

	var r0 logger.Logger
	if rf, ok := ret.Get(0).(func(string) logger.Logger); ok {
		r0 = rf(prefix)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(logger.Logger)
		}
	}

	return r0
}

// Storage provides a mock function with given fields:
func (_m *ServiceContext) Storage() sendo.Storage {
	ret := _m.Called()

	var r0 sendo.Storage
	if rf, ok := ret.Get(0).(func() sendo.Storage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(sendo.Storage)
		}
	}

	return r0
}
